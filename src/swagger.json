{
  "swagger": "2.0",
  "info": {
    "title": "CJA APIs",
    "version": "0.1.0",
    "description": "Preliminary spec for Customer Journey Analytics APIs"
  },
  "basePath": "https://cja.adobe.io",
  "paths": {
    "/aresconfig/users/me": {
      "get": {
        "tags": [
          "Configuration API"
        ],
        "summary": "Returns the current user",
        "description": "",
        "operationId": "getCurrentUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "useCache",
            "in": "query",
            "description": "useCache",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "countryCode": {
                  "type": "string"
                },
                "mrktPermEmail": {
                  "type": "boolean"
                },
                "emailVerified": {
                  "type": "boolean"
                },
                "first_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "utcOffset": {
                  "type": "string"
                },
                "mrktPerm": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "principal": {
                        "type": "string"
                      },
                      "organization": {
                        "type": "string"
                      },
                      "named_role": {
                        "type": "string"
                      },
                      "target": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calculatedmetrics/{id}": {
      "get": {
        "tags": [
          "Calculated Metrics API"
        ],
        "summary": "Retrieve a single calculated metric by id",
        "description": "A calculated metric response will always include these default items: *id, name, description, rsid, owner, polarity, precision, type* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *tags*: Gives all existing tags associated with the calculated metric\n\nFor more information about calculated metrics go [here](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/calculatedmetrics.md)\n\n",
        "operationId": "findOneCalculatedMetric_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The calculated metric ID to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional calculated metric metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "approved",
                "favorite",
                "shares",
                "tags",
                "sharesFullName",
                "usageSummary",
                "usageSummaryWithRelevancyScore",
                "reportSuiteName",
                "siteTitle",
                "ownerFullName",
                "modified",
                "migratedIds",
                "isDeleted",
                "definition",
                "authorization",
                "compatibility",
                "legacyId",
                "internal",
                "dataGroup",
                "categories",
                "reportTimeAttribution",
                "warning"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "includeHidden",
            "in": "query",
            "description": "Whether to include variables that are hidden in the UI or that the user doesn't have permission to.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "toBeUsedInRsid",
            "in": "query",
            "description": "The report suite where the calculated metric is intended to be used. This report suite will be used to determine things like compatibility and permissions.  If it is not specified then the permissions will be calculated based on the union of all metrics authorized in all groups the user belongs to.  If the compatibility expansion is specified and toBeUsedInRsid is not then the compatibility returned is based off the compatibility from the last time the calculated metric was saved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "required": [
                "definition"
              ],
              "properties": {
                "rsid": {
                  "type": "string"
                },
                "reportSuiteName": {
                  "type": "string"
                },
                "dataId": {
                  "type": "string"
                },
                "dataName": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "migratedIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "internal": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "object"
                },
                "polarity": {
                  "type": "string",
                  "description": "Set metric polarity, which indicates whether it's good or bad if a given metric goes up. Default=positive",
                  "enum": [
                    "positive",
                    "negative"
                  ]
                },
                "alternateVariableNames": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "baseName": {
                      "type": "string"
                    },
                    "curatedName": {
                      "type": "string"
                    }
                  }
                },
                "precision": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of decimal places to include in calculated metric result"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CURRENCY",
                    "TIME",
                    "DECIMAL",
                    "PERCENT"
                  ]
                },
                "definition": {
                  "description": "Calculated metric definition object",
                  "type": "object"
                },
                "compatibility": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "identityMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "identity": {
                            "type": "string"
                          },
                          "dimensionView": {
                            "type": "string",
                            "enum": [
                              "LINEAR_ALLOCATION",
                              "PARTICIPATION_ALLOCATION",
                              "LAST_TOUCH_ALLOCATION",
                              "MC_FIRST_TOUCH_ALLOCATION",
                              "MC_LAST_TOUCH_ALLOCATION"
                            ]
                          },
                          "allocationModel": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          }
                        }
                      }
                    },
                    "identityDimensions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "segments": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "functions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "validator_version": {
                      "type": "string"
                    },
                    "supported_products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "supported_schema": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "legacyId": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "authorization": {
                  "type": "object",
                  "properties": {
                    "authorized": {
                      "type": "boolean"
                    },
                    "permissioned": {
                      "type": "boolean"
                    },
                    "unAuthorizedMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unAuthorizedSegmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notAllowedForReportingMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedForReporting": {
                      "type": "boolean"
                    }
                  }
                },
                "dataGroup": {
                  "type": "string"
                },
                "solution": {
                  "type": "boolean"
                },
                "curatedItem": {
                  "type": "boolean"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "reportTimeAttribution": {
                  "type": "boolean"
                },
                "warning": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "helpLink": {
                      "type": "string"
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "siteTitle": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "403": {
            "description": "Requesting non-shared calculated metrics for other users is restricted to admin users",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "External API error; calculated metric retrieval failed",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Calculated Metrics API"
        ],
        "summary": "Update an existing calculated metric",
        "description": "The following fields can be modified through this endpoint: <br><b>name, description, definition, owner, rsid</b>\nExample \"defintion\" for use in testing API below (\"Visits per visitor\"):<br>\n\"definition\": {\r\n      \"formula\": {\r\n        \"func\": \"divide\",\r\n        \"col1\": {\r\n          \"func\": \"metric\",\r\n          \"name\": \"metrics/visits\",\r\n          \"description\": \"Visits\"\r\n        },\r\n        \"col2\": {\r\n          \"func\": \"metric\",\r\n          \"name\": \"metrics/visitors\",\r\n          \"description\": \"Unique Visitors\"\r\n        }\r\n      },\r\n      \"func\": \"calc-metric\",\r\n      \"version\": [\r\n        1,\r\n        0,\r\n        0\r\n      ]\r\n    }<br><br>Response will be the newly modified calculated metric object after the update request completes.<br><br><b><span style=\"text-decoration: underline;\">CalculatedMetricResponse</span></b><br>A calculated metric response will always include these default items:* id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/calculatedmetrics\" or GET \"/calculatedmetrics/{id}\" for more documentation).",
        "operationId": "calculatedmetrics_updateCalculatedMetric",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional calculated metric metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "approved",
                "favorite",
                "shares",
                "tags",
                "sharesFullName",
                "usageSummary",
                "usageSummaryWithRelevancyScore",
                "reportSuiteName",
                "siteTitle",
                "ownerFullName",
                "modified",
                "migratedIds",
                "isDeleted",
                "definition",
                "authorization",
                "compatibility",
                "legacyId",
                "internal",
                "dataGroup",
                "categories",
                "reportTimeAttribution",
                "warning"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Calculated Metric ID to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted Object containing key/value pairs to be updated.",
            "required": false,
            "schema": {
              "type": "object",
              "required": [
                "definition"
              ],
              "properties": {
                "rsid": {
                  "type": "string"
                },
                "reportSuiteName": {
                  "type": "string"
                },
                "dataId": {
                  "type": "string"
                },
                "dataName": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "migratedIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "internal": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "object"
                },
                "polarity": {
                  "type": "string",
                  "description": "Set metric polarity, which indicates whether it's good or bad if a given metric goes up. Default=positive",
                  "enum": [
                    "positive",
                    "negative"
                  ]
                },
                "alternateVariableNames": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "baseName": {
                      "type": "string"
                    },
                    "curatedName": {
                      "type": "string"
                    }
                  }
                },
                "precision": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of decimal places to include in calculated metric result"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CURRENCY",
                    "TIME",
                    "DECIMAL",
                    "PERCENT"
                  ]
                },
                "definition": {
                  "description": "Calculated metric definition object",
                  "type": "object"
                },
                "compatibility": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "identityMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "identity": {
                            "type": "string"
                          },
                          "dimensionView": {
                            "type": "string",
                            "enum": [
                              "LINEAR_ALLOCATION",
                              "PARTICIPATION_ALLOCATION",
                              "LAST_TOUCH_ALLOCATION",
                              "MC_FIRST_TOUCH_ALLOCATION",
                              "MC_LAST_TOUCH_ALLOCATION"
                            ]
                          },
                          "allocationModel": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          }
                        }
                      }
                    },
                    "identityDimensions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "segments": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "functions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "validator_version": {
                      "type": "string"
                    },
                    "supported_products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "supported_schema": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "legacyId": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "authorization": {
                  "type": "object",
                  "properties": {
                    "authorized": {
                      "type": "boolean"
                    },
                    "permissioned": {
                      "type": "boolean"
                    },
                    "unAuthorizedMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unAuthorizedSegmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notAllowedForReportingMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedForReporting": {
                      "type": "boolean"
                    }
                  }
                },
                "dataGroup": {
                  "type": "string"
                },
                "solution": {
                  "type": "boolean"
                },
                "curatedItem": {
                  "type": "boolean"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "reportTimeAttribution": {
                  "type": "boolean"
                },
                "warning": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "helpLink": {
                      "type": "string"
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "siteTitle": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "cached",
            "in": "query",
            "description": "Use cached results",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "required": [
                "definition"
              ],
              "properties": {
                "rsid": {
                  "type": "string"
                },
                "reportSuiteName": {
                  "type": "string"
                },
                "dataId": {
                  "type": "string"
                },
                "dataName": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "migratedIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "internal": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "object"
                },
                "polarity": {
                  "type": "string",
                  "description": "Set metric polarity, which indicates whether it's good or bad if a given metric goes up. Default=positive",
                  "enum": [
                    "positive",
                    "negative"
                  ]
                },
                "alternateVariableNames": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "baseName": {
                      "type": "string"
                    },
                    "curatedName": {
                      "type": "string"
                    }
                  }
                },
                "precision": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of decimal places to include in calculated metric result"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CURRENCY",
                    "TIME",
                    "DECIMAL",
                    "PERCENT"
                  ]
                },
                "definition": {
                  "description": "Calculated metric definition object",
                  "type": "object"
                },
                "compatibility": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "identityMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "identity": {
                            "type": "string"
                          },
                          "dimensionView": {
                            "type": "string",
                            "enum": [
                              "LINEAR_ALLOCATION",
                              "PARTICIPATION_ALLOCATION",
                              "LAST_TOUCH_ALLOCATION",
                              "MC_FIRST_TOUCH_ALLOCATION",
                              "MC_LAST_TOUCH_ALLOCATION"
                            ]
                          },
                          "allocationModel": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          }
                        }
                      }
                    },
                    "identityDimensions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "segments": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "functions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "validator_version": {
                      "type": "string"
                    },
                    "supported_products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "supported_schema": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "legacyId": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "authorization": {
                  "type": "object",
                  "properties": {
                    "authorized": {
                      "type": "boolean"
                    },
                    "permissioned": {
                      "type": "boolean"
                    },
                    "unAuthorizedMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unAuthorizedSegmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notAllowedForReportingMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedForReporting": {
                      "type": "boolean"
                    }
                  }
                },
                "dataGroup": {
                  "type": "string"
                },
                "solution": {
                  "type": "boolean"
                },
                "curatedItem": {
                  "type": "boolean"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "reportTimeAttribution": {
                  "type": "boolean"
                },
                "warning": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "helpLink": {
                      "type": "string"
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "siteTitle": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Definition must be formatted as a JSON Object",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Company mismatch; calculated metric ownership can only be transferred within the same organization",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to update this calculated metric",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "External API error; Calculated metric update or retrieval failed",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Calculated Metrics API"
        ],
        "summary": "Deletion of Calculated Metrics by Id",
        "description": "",
        "operationId": "calculatedmetrics_deleteCalculatedMetric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The calculated metric ID to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "External API error; Calculated metric delete failed",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/calculatedmetrics": {
      "get": {
        "tags": [
          "Calculated Metrics API"
        ],
        "summary": "Retrieve many calculated metrics",
        "description": "A calculated metric response will always include these default items: *id, name, description, rsid, owner, polarity, precision, type* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *tags*: Gives all existing tags associated with the calculated metric\n\nFor more information about calculated metrics go [here](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/calculatedmetrics.md)\n\n",
        "operationId": "findCalculatedMetrics_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional calculated metric metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "dataName",
                "approved",
                "favorite",
                "shares",
                "tags",
                "sharesFullName",
                "usageSummary",
                "usageSummaryWithRelevancyScore",
                "reportSuiteName",
                "siteTitle",
                "ownerFullName",
                "modified",
                "migratedIds",
                "isDeleted",
                "definition",
                "authorization",
                "compatibility",
                "legacyId",
                "internal",
                "dataGroup",
                "categories"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "includeType",
            "in": "query",
            "description": "Include additional calculated metrics not owned by user. The \"all\" option takes precedence over \"shared\"",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "all",
                "shared",
                "templates",
                "unauthorized",
                "deleted",
                "internal",
                "curatedItem"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "dataIds",
            "in": "query",
            "description": "Filter list to only include calculated metrics tied to specified RSID list (comma-delimited)",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Filter list to only include calculated metrics owned by the specified loginId",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterByIds",
            "in": "query",
            "description": "Filter list to only include calculated metrics in the specified list (comma-delimited list of IDs) (this is the same as calculatedMetricFilter, and is overwritten by calculatedMetricFilter",
            "required": false,
            "type": "string"
          },
          {
            "name": "toBeUsedInRsid",
            "in": "query",
            "description": "The data view where the calculated metric intended to be used.  This data view will be used to determine things like compatibility and permissions.  If it is not specified then the permissions will be calculated based on the union of all metrics authorized in all groups the user belongs to.  If the compatibility expansion is specified and toBeUsedInRsid is not then the compatibility returned is based off the compatibility from the last time the calculated metric was saved.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "favorite",
            "in": "query",
            "description": "Filter list to only include calculated metrics that are favorites",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "approved",
            "in": "query",
            "description": "Filter list to only include calculated metrics that are approved",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "return paginated results",
            "required": false,
            "type": "string",
            "default": "true",
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC or DESC)",
            "required": false,
            "type": "string",
            "default": "ASC"
          },
          {
            "name": "sortProperty",
            "in": "query",
            "description": "Property to sort by (name, modified_date, id is currently allowed)",
            "required": false,
            "type": "string",
            "default": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "definition"
                ],
                "properties": {
                  "rsid": {
                    "type": "string"
                  },
                  "reportSuiteName": {
                    "type": "string"
                  },
                  "dataId": {
                    "type": "string"
                  },
                  "dataName": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isDeleted": {
                    "type": "boolean"
                  },
                  "migratedIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "internal": {
                    "type": "boolean"
                  },
                  "owner": {
                    "type": "object"
                  },
                  "polarity": {
                    "type": "string",
                    "description": "Set metric polarity, which indicates whether it's good or bad if a given metric goes up. Default=positive",
                    "enum": [
                      "positive",
                      "negative"
                    ]
                  },
                  "alternateVariableNames": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "baseName": {
                        "type": "string"
                      },
                      "curatedName": {
                        "type": "string"
                      }
                    }
                  },
                  "precision": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of decimal places to include in calculated metric result"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CURRENCY",
                      "TIME",
                      "DECIMAL",
                      "PERCENT"
                    ]
                  },
                  "definition": {
                    "description": "Calculated metric definition object",
                    "type": "object"
                  },
                  "compatibility": {
                    "type": "object",
                    "properties": {
                      "valid": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string"
                      },
                      "identityMetrics": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identity": {
                              "type": "string"
                            },
                            "dimensionView": {
                              "type": "string",
                              "enum": [
                                "LINEAR_ALLOCATION",
                                "PARTICIPATION_ALLOCATION",
                                "LAST_TOUCH_ALLOCATION",
                                "MC_FIRST_TOUCH_ALLOCATION",
                                "MC_LAST_TOUCH_ALLOCATION"
                              ]
                            },
                            "allocationModel": {
                              "type": "string",
                              "enum": [
                                "ALLOCATION_FIRST_TOUCH",
                                "ALLOCATION_FIRST_TOUCH_DIM",
                                "ALLOCATION_LAST_TOUCH",
                                "ALLOCATION_LAST_TOUCH_DIM",
                                "ALLOCATION_INSTANCE",
                                "ALLOCATION_DEDUPED_INSTANCE",
                                "ALLOCATION_LAST_KNOWN",
                                "ALLOCATION_LEGACY",
                                "ALLOCATION_LINEAR",
                                "ALLOCATION_PARTICIPATION",
                                "ALLOCATION_PARTICIPATION_DIM",
                                "ALLOCATION_POSITION_BASED",
                                "ALLOCATION_TIME_DECAY",
                                "ALLOCATION_U_SHAPED",
                                "ALLOCATION_J_SHAPED",
                                "ALLOCATION_REVERSE_J_SHAPED",
                                "ALLOCATION_DEDUPED_LINEAR",
                                "ALLOCATION_ALGORITHMIC"
                              ]
                            }
                          }
                        }
                      },
                      "identityDimensions": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "segments": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "functions": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "validator_version": {
                        "type": "string"
                      },
                      "supported_products": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "supported_schema": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "legacyId": {
                    "type": "string"
                  },
                  "template": {
                    "type": "boolean"
                  },
                  "authorization": {
                    "type": "object",
                    "properties": {
                      "authorized": {
                        "type": "boolean"
                      },
                      "permissioned": {
                        "type": "boolean"
                      },
                      "unAuthorizedMetricIdentities": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "unAuthorizedSegmentIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "notAllowedForReportingMetricIdentities": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allowedForReporting": {
                        "type": "boolean"
                      }
                    }
                  },
                  "dataGroup": {
                    "type": "string"
                  },
                  "solution": {
                    "type": "boolean"
                  },
                  "curatedItem": {
                    "type": "boolean"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "reportTimeAttribution": {
                    "type": "boolean"
                  },
                  "warning": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      },
                      "helpLink": {
                        "type": "string"
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  },
                  "shares": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    }
                  },
                  "approved": {
                    "type": "boolean"
                  },
                  "favorite": {
                    "type": "boolean"
                  },
                  "usageSummary": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "siteTitle": {
                    "type": "string"
                  },
                  "modified": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to retrieve list of calculated metrics shared with user",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Owner filter error; user specified is not in the same company as the requesting user",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Requesting non-shared calculated metrics for other users is restricted to admin users",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "External API error; Calculated metric retrieval failed",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/calculatedmetrics/functions": {
      "get": {
        "tags": [
          "Calculated Metrics API"
        ],
        "summary": "Retrieve calculated metric functions",
        "description": "",
        "operationId": "calculatedmetrics_getCalculatedMetricFunctions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "persistable": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "exampleKey": {
                    "type": "string"
                  },
                  "example": {
                    "type": "string"
                  },
                  "definition": {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string"
                      },
                      "parameters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "friendlyNameKey": {
                              "type": "string"
                            },
                            "descKey": {
                              "type": "string"
                            },
                            "friendlyName": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "default-value": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "formula": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "version": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "External API error; Calculated metric functions retrieval failed",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/calculatedmetrics/functions/{id}": {
      "get": {
        "tags": [
          "Calculated Metrics API"
        ],
        "summary": "Retrieve a calculated metric function by id",
        "description": "",
        "operationId": "calculatedmetrics_getCalculatedMetricFunction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The function ID to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "persistable": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "exampleKey": {
                  "type": "string"
                },
                "example": {
                  "type": "string"
                },
                "definition": {
                  "type": "object",
                  "properties": {
                    "func": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "friendlyNameKey": {
                            "type": "string"
                          },
                          "descKey": {
                            "type": "string"
                          },
                          "friendlyName": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "default-value": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "formula": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "version": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Calculated metric function not found",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "External API error; Calculated metric function retrieval failed",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/calculatedmetrics/validate": {
      "post": {
        "tags": [
          "Calculated Metrics API"
        ],
        "summary": "Validate a calculated metric definition",
        "description": "",
        "operationId": "calculatedmetrics_validateCalculatedMetric",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted Object containing key/value pairs for calculated metric validation.",
            "required": false,
            "schema": {
              "type": "object",
              "required": [
                "definition"
              ],
              "properties": {
                "rsid": {
                  "type": "string"
                },
                "reportSuiteName": {
                  "type": "string"
                },
                "dataId": {
                  "type": "string"
                },
                "dataName": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "migratedIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "internal": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "object"
                },
                "polarity": {
                  "type": "string",
                  "description": "Set metric polarity, which indicates whether it's good or bad if a given metric goes up. Default=positive",
                  "enum": [
                    "positive",
                    "negative"
                  ]
                },
                "alternateVariableNames": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "baseName": {
                      "type": "string"
                    },
                    "curatedName": {
                      "type": "string"
                    }
                  }
                },
                "precision": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of decimal places to include in calculated metric result"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CURRENCY",
                    "TIME",
                    "DECIMAL",
                    "PERCENT"
                  ]
                },
                "definition": {
                  "description": "Calculated metric definition object",
                  "type": "object"
                },
                "compatibility": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "identityMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "identity": {
                            "type": "string"
                          },
                          "dimensionView": {
                            "type": "string",
                            "enum": [
                              "LINEAR_ALLOCATION",
                              "PARTICIPATION_ALLOCATION",
                              "LAST_TOUCH_ALLOCATION",
                              "MC_FIRST_TOUCH_ALLOCATION",
                              "MC_LAST_TOUCH_ALLOCATION"
                            ]
                          },
                          "allocationModel": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          }
                        }
                      }
                    },
                    "identityDimensions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "segments": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "functions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "validator_version": {
                      "type": "string"
                    },
                    "supported_products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "supported_schema": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "legacyId": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "authorization": {
                  "type": "object",
                  "properties": {
                    "authorized": {
                      "type": "boolean"
                    },
                    "permissioned": {
                      "type": "boolean"
                    },
                    "unAuthorizedMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unAuthorizedSegmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notAllowedForReportingMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedForReporting": {
                      "type": "boolean"
                    }
                  }
                },
                "dataGroup": {
                  "type": "string"
                },
                "solution": {
                  "type": "boolean"
                },
                "curatedItem": {
                  "type": "boolean"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "reportTimeAttribution": {
                  "type": "boolean"
                },
                "warning": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "helpLink": {
                      "type": "string"
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "siteTitle": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "migrating",
            "in": "query",
            "description": "Include migration functions in validation",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "required": [
                "definition"
              ],
              "properties": {
                "rsid": {
                  "type": "string"
                },
                "reportSuiteName": {
                  "type": "string"
                },
                "dataId": {
                  "type": "string"
                },
                "dataName": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "migratedIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "internal": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "object"
                },
                "polarity": {
                  "type": "string",
                  "description": "Set metric polarity, which indicates whether it's good or bad if a given metric goes up. Default=positive",
                  "enum": [
                    "positive",
                    "negative"
                  ]
                },
                "alternateVariableNames": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "baseName": {
                      "type": "string"
                    },
                    "curatedName": {
                      "type": "string"
                    }
                  }
                },
                "precision": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of decimal places to include in calculated metric result"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CURRENCY",
                    "TIME",
                    "DECIMAL",
                    "PERCENT"
                  ]
                },
                "definition": {
                  "description": "Calculated metric definition object",
                  "type": "object"
                },
                "compatibility": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "identityMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "identity": {
                            "type": "string"
                          },
                          "dimensionView": {
                            "type": "string",
                            "enum": [
                              "LINEAR_ALLOCATION",
                              "PARTICIPATION_ALLOCATION",
                              "LAST_TOUCH_ALLOCATION",
                              "MC_FIRST_TOUCH_ALLOCATION",
                              "MC_LAST_TOUCH_ALLOCATION"
                            ]
                          },
                          "allocationModel": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          }
                        }
                      }
                    },
                    "identityDimensions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "segments": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "functions": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "validator_version": {
                      "type": "string"
                    },
                    "supported_products": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "supported_schema": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "legacyId": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "authorization": {
                  "type": "object",
                  "properties": {
                    "authorized": {
                      "type": "boolean"
                    },
                    "permissioned": {
                      "type": "boolean"
                    },
                    "unAuthorizedMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unAuthorizedSegmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notAllowedForReportingMetricIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedForReporting": {
                      "type": "boolean"
                    }
                  }
                },
                "dataGroup": {
                  "type": "string"
                },
                "solution": {
                  "type": "boolean"
                },
                "curatedItem": {
                  "type": "boolean"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "reportTimeAttribution": {
                  "type": "boolean"
                },
                "warning": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "helpLink": {
                      "type": "string"
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "siteTitle": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "External API error; Calculated metric validation failed",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "no_feature_access_to_advanced_calculated_metrics",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/componentmetadata/shares": {
      "get": {
        "tags": [
          "Shares API"
        ],
        "summary": "Returns all components that have been shared by the current user (meeting the paging restriction)",
        "description": "",
        "operationId": "findAllForCurrentUser_3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "includeType",
            "in": "query",
            "description": "Include additional shares not owned by the user",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sharedTo"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "The user ID to return details for. Only admins may user this option.",
            "required": false,
            "type": "string"
          },
          {
            "name": "useCache",
            "in": "query",
            "description": "Use cache",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "shareId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "imsOrgId": {
                    "type": "string"
                  },
                  "shareToId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "shareToImsId": {
                    "type": "string"
                  },
                  "shareToType": {
                    "type": "string"
                  },
                  "shareFromImsId": {
                    "type": "string"
                  },
                  "componentType": {
                    "type": "string"
                  },
                  "componentId": {
                    "type": "string"
                  },
                  "shareToDisplayName": {
                    "type": "string"
                  },
                  "shareToLogin": {
                    "type": "string"
                  },
                  "accessLevel": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to retrieve list of components."
          }
        }
      },
      "put": {
        "tags": [
          "Shares API"
        ],
        "summary": "Share components with users. WARNING: Authoritative; deletes/overwrites all pre-existing shares for the given components",
        "description": "Create one/many shares for one/many components at once. For each component object in the passed list, the given shares will replace the current set of shares for each component. For example, if one of the components was previously shared with additional users, and that share is not passed in here, it will no longer be shared with them.<br>",
        "operationId": "modifyShares_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted ARRAY of objects containing key-value pairs that conform to the schema",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "componentType": {
                    "type": "string"
                  },
                  "componentId": {
                    "type": "string"
                  },
                  "shares": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "shareToId": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "shareToImsId": {
                          "type": "string"
                        },
                        "shareToType": {
                          "type": "string"
                        },
                        "accessLevel": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "useCache",
            "in": "query",
            "description": "Use caching for faster requests",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "componentType": {
                  "type": "string"
                },
                "componentId": {
                  "type": "string"
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "shareToId": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "shareToImsId": {
                        "type": "string"
                      },
                      "shareToType": {
                        "type": "string"
                      },
                      "accessLevel": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid component type, or mixed component types on request (only one type per request)"
          },
          "403": {
            "description": "Permission error; user does not have access for the requested operation"
          },
          "500": {
            "description": "Unable to save list of component shares"
          }
        }
      }
    },
    "/componentmetadata/shares/{id}": {
      "get": {
        "tags": [
          "Shares API"
        ],
        "summary": "Returns details about a specific share",
        "description": "",
        "operationId": "getShare_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The share ID to return details for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "useCache",
            "in": "query",
            "description": "Use cache",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "shareId": {
                  "type": "integer",
                  "format": "int64"
                },
                "imsOrgId": {
                  "type": "string"
                },
                "shareToId": {
                  "type": "integer",
                  "format": "int32"
                },
                "shareToImsId": {
                  "type": "string"
                },
                "shareToType": {
                  "type": "string"
                },
                "shareFromImsId": {
                  "type": "string"
                },
                "componentType": {
                  "type": "string"
                },
                "componentId": {
                  "type": "string"
                },
                "shareToDisplayName": {
                  "type": "string"
                },
                "shareToLogin": {
                  "type": "string"
                },
                "accessLevel": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid component type"
          },
          "403": {
            "description": "Permission error; user does not have access to the share"
          },
          "500": {
            "description": "Unable to retrieve share"
          }
        }
      },
      "delete": {
        "tags": [
          "Shares API"
        ],
        "summary": "Deletes the share with the given id",
        "description": "Delete by shareId and remove that share from all associated components.",
        "operationId": "deleteShare_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The shareId to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "useCache",
            "in": "query",
            "description": "Use cache",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "403": {
            "description": "Permission error; user does not have access to delete the component"
          },
          "500": {
            "description": "Unable to delete share"
          }
        }
      }
    },
    "/componentmetadata/shares/sharedto/me": {
      "get": {
        "tags": [
          "Shares API"
        ],
        "summary": "Returns all component ids that have shared to the current user",
        "description": "",
        "operationId": "findAllSharesToCurrentUser_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentType",
            "in": "query",
            "description": "ComponentType to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        }
      }
    },
    "/componentmetadata/shares/component/search": {
      "post": {
        "tags": [
          "Shares API"
        ],
        "summary": "search for shares for several components at once",
        "description": "",
        "operationId": "searchComponentTags_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "items to search for",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "componentType": {
                  "type": "string"
                },
                "componentIds": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "dataId": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional project metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sharesFullName"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "componentType": {
                  "type": "string"
                },
                "componentId": {
                  "type": "string"
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "shareId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "imsOrgId": {
                        "type": "string"
                      },
                      "shareToId": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "shareToImsId": {
                        "type": "string"
                      },
                      "shareToType": {
                        "type": "string"
                      },
                      "shareFromImsId": {
                        "type": "string"
                      },
                      "componentType": {
                        "type": "string"
                      },
                      "componentId": {
                        "type": "string"
                      },
                      "shareToDisplayName": {
                        "type": "string"
                      },
                      "shareToLogin": {
                        "type": "string"
                      },
                      "accessLevel": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/componentmetadata/tags": {
      "get": {
        "tags": [
          "Tags API"
        ],
        "summary": "Returns a list of tags for the current user's company",
        "description": "",
        "operationId": "findAllForCompany_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "the tag id"
                  },
                  "name": {
                    "type": "string",
                    "description": "the tag name "
                  },
                  "description": {
                    "type": "string",
                    "description": "the tag description"
                  },
                  "components": {
                    "type": "array",
                    "description": "the list of components that have been tagged with this tag",
                    "uniqueItems": true,
                    "items": {
                      "ref": "#/definitions/TaggedComponent"
                    }
                  }
                },
                "description": "Tag Model"
              }
            }
          },
          "500": {
            "description": "Unable to retrieve list of tags for user."
          }
        }
      },
      "post": {
        "tags": [
          "Tags API"
        ],
        "summary": "Saves the given tag(s) for the current user's company",
        "description": "Allows creation of a new tag and applies that new tag to the passed component",
        "operationId": "saveTagList_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted array of Tag objects containing key-value pairs",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "the tag id"
                  },
                  "name": {
                    "type": "string",
                    "description": "the tag name "
                  },
                  "description": {
                    "type": "string",
                    "description": "the tag description"
                  },
                  "components": {
                    "type": "array",
                    "description": "the list of components that have been tagged with this tag",
                    "uniqueItems": true,
                    "items": {
                      "ref": "#/definitions/TaggedComponent"
                    }
                  }
                },
                "description": "Tag Model"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "the tag id"
                  },
                  "name": {
                    "type": "string",
                    "description": "the tag name "
                  },
                  "description": {
                    "type": "string",
                    "description": "the tag description"
                  },
                  "components": {
                    "type": "array",
                    "description": "the list of components that have been tagged with this tag",
                    "uniqueItems": true,
                    "items": {
                      "ref": "#/definitions/TaggedComponent"
                    }
                  }
                },
                "description": "Tag Model"
              }
            }
          },
          "500": {
            "description": "Unable to save list of tags."
          }
        }
      },
      "delete": {
        "tags": [
          "Tags API"
        ],
        "summary": "Disassociates all tags from the given components",
        "description": "Removes all tags from the passed componentIds. Note that currently this is done in a single DB query, so there is a single combined response for the entire operation.",
        "operationId": "deleteTagItems_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentIds",
            "in": "query",
            "description": "Comma-separated list of componentIds to operate on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentType",
            "in": "query",
            "description": "The component type to operate on.",
            "required": true,
            "type": "string",
            "enum": [
              "segment",
              "dashboard",
              "bookmark",
              "calculatedMetric",
              "project",
              "dateRange",
              "metric",
              "dimension",
              "virtualReportSuite",
              "scheduledJob",
              "alert",
              "classificationSet",
              "dataView"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid component type."
          },
          "500": {
            "description": "Unable to remove tags for given components."
          }
        }
      }
    },
    "/componentmetadata/tags/{id}": {
      "get": {
        "tags": [
          "Tags API"
        ],
        "summary": "Retrieves an tag by its id",
        "description": "",
        "operationId": "getTagById_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID to be retrieved",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "the tag id"
                },
                "name": {
                  "type": "string",
                  "description": "the tag name "
                },
                "description": {
                  "type": "string",
                  "description": "the tag description"
                },
                "components": {
                  "type": "array",
                  "description": "the list of components that have been tagged with this tag",
                  "uniqueItems": true,
                  "items": {
                    "ref": "#/definitions/TaggedComponent"
                  }
                }
              },
              "description": "Tag Model"
            }
          },
          "404": {
            "description": "Unable to find a tag with the given ID"
          },
          "500": {
            "description": "Unexpected server error while trying to retrieve tag"
          }
        }
      },
      "delete": {
        "tags": [
          "Tags API"
        ],
        "summary": "Removes the tagId and all associations from that tag to any components",
        "description": "Delete by tagId. Will un-tag any/all components that were associated with the passed tagId.",
        "operationId": "deleteTag_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The tagId to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "The given tagId does not exist"
          },
          "500": {
            "description": "Unable to delete the given tagId."
          }
        }
      }
    },
    "/componentmetadata/tags/component/search": {
      "post": {
        "tags": [
          "Tags API"
        ],
        "summary": "search for tags for several components at once",
        "description": "",
        "operationId": "searchComponentTags_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "items to search for",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "componentType": {
                  "type": "string"
                },
                "componentIds": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "dataId": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "componentType": {
                  "type": "string"
                },
                "componentId": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "the tag id"
                      },
                      "name": {
                        "type": "string",
                        "description": "the tag name "
                      },
                      "description": {
                        "type": "string",
                        "description": "the tag description"
                      },
                      "components": {
                        "type": "array",
                        "description": "the list of components that have been tagged with this tag",
                        "uniqueItems": true,
                        "items": {
                          "ref": "#/definitions/TaggedComponent"
                        }
                      }
                    },
                    "description": "Tag Model"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/componentmetadata/tags/search": {
      "get": {
        "tags": [
          "Tags API"
        ],
        "summary": "Retrieves a tags for a given component by componentId and componentType",
        "description": "Given a componentId, return all tags associated with that component",
        "operationId": "getTagListByComponentIdAndComponentType_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentId",
            "in": "query",
            "description": "The componentId to operate on. Currently this is just the segmentId.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentType",
            "in": "query",
            "description": "The component type to operate on.",
            "required": true,
            "type": "string",
            "enum": [
              "segment",
              "dashboard",
              "bookmark",
              "calculatedMetric",
              "project",
              "dateRange",
              "metric",
              "dimension",
              "virtualReportSuite",
              "scheduledJob",
              "alert",
              "classificationSet",
              "dataView"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "the tag id"
                  },
                  "name": {
                    "type": "string",
                    "description": "the tag name "
                  },
                  "description": {
                    "type": "string",
                    "description": "the tag description"
                  },
                  "components": {
                    "type": "array",
                    "description": "the list of components that have been tagged with this tag",
                    "uniqueItems": true,
                    "items": {
                      "ref": "#/definitions/TaggedComponent"
                    }
                  }
                },
                "description": "Tag Model"
              }
            }
          },
          "400": {
            "description": "Invalid component type."
          },
          "500": {
            "description": "Unable to retrieve tags for given component."
          }
        }
      }
    },
    "/componentmetadata/tags/tagnames": {
      "get": {
        "tags": [
          "Tags API"
        ],
        "summary": "Retrieves component ids associated with the given tag names",
        "description": "Given a comma separated list of tag names, return component ids associated with them.",
        "operationId": "getComponentsByTagName_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagNames",
            "in": "query",
            "description": "Comma separated list of tag names.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentType",
            "in": "query",
            "description": "The component type to operate on.",
            "required": true,
            "type": "string",
            "enum": [
              "segment",
              "dashboard",
              "bookmark",
              "calculatedMetric",
              "project",
              "dateRange",
              "metric",
              "dimension",
              "virtualReportSuite",
              "scheduledJob",
              "alert",
              "classificationSet",
              "dataView"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid component type."
          },
          "500": {
            "description": "Unable to retrieve tags for given component."
          }
        }
      }
    },
    "/componentmetadata/tags/tagitems": {
      "put": {
        "tags": [
          "Tags API"
        ],
        "summary": "Tag a component with one or many tags at once. WARNING: Authoritative; deletes/overwrites all pre-existing associations",
        "description": "This endpoint allows many tags at once to be created/deleted. Any tags passed to this endpoint will become the *only* tags for that componentId (all other tags will be removed).",
        "operationId": "saveTagComponentList_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted object containing key-value pairs that conform to the schema",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "componentType": {
                    "type": "string"
                  },
                  "componentId": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "the tag id"
                        },
                        "name": {
                          "type": "string",
                          "description": "the tag name "
                        },
                        "description": {
                          "type": "string",
                          "description": "the tag description"
                        },
                        "components": {
                          "type": "array",
                          "description": "the list of components that have been tagged with this tag",
                          "uniqueItems": true,
                          "items": {
                            "ref": "#/definitions/TaggedComponent"
                          }
                        }
                      },
                      "description": "Tag Model"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "componentType": {
                    "type": "string"
                  },
                  "componentId": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "the tag id"
                        },
                        "name": {
                          "type": "string",
                          "description": "the tag name "
                        },
                        "description": {
                          "type": "string",
                          "description": "the tag description"
                        },
                        "components": {
                          "type": "array",
                          "description": "the list of components that have been tagged with this tag",
                          "uniqueItems": true,
                          "items": {
                            "ref": "#/definitions/TaggedComponent"
                          }
                        }
                      },
                      "description": "Tag Model"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to save tag list."
          }
        }
      }
    },
    "/reports": {
      "post": {
        "tags": [
          "Reporting API"
        ],
        "summary": "Runs a report for the request in the post body",
        "description": "See the [Reporting User Guide](https://github.com/AdobeDocs/analytics-2.0-apis/blob/master/reporting-guide.md) for details.",
        "operationId": "runReport_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "allowRemoteLoad",
            "in": "query",
            "description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist",
            "required": false,
            "type": "string",
            "default": "default",
            "enum": [
              "true",
              "false",
              "default"
            ]
          },
          {
            "name": "useCache",
            "in": "query",
            "description": "Use caching for faster requests (Use cached dimensions to speed up permission checks - This does not do any report caching)",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "useResultsCache",
            "in": "query",
            "description": "Use results caching for faster reporting times (This is a pass through to Oberon which manages the Cache)",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeOberonXml",
            "in": "query",
            "description": "Controls if Oberon XML should be returned in the response - DEBUG ONLY",
            "required": false,
            "type": "boolean",
            "default": false,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "includePlatformPredictiveObjects",
            "in": "query",
            "description": "Controls if platform Predictive Objects should be returned in the response. Only available when using Anomaly Detection or Forecasting- DEBUG ONLY",
            "required": false,
            "type": "boolean",
            "default": false,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "rsid": {
                  "type": "string"
                },
                "dataId": {
                  "type": "string"
                },
                "dimension": {
                  "type": "string"
                },
                "locale": {
                  "type": "object",
                  "properties": {
                    "script": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "string"
                    },
                    "extensionKeys": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "unicodeLocaleAttributes": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "unicodeLocaleKeys": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "iso3Language": {
                      "type": "string"
                    },
                    "iso3Country": {
                      "type": "string"
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "displayScript": {
                      "type": "string"
                    },
                    "displayCountry": {
                      "type": "string"
                    },
                    "displayVariant": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "language": {
                      "type": "string"
                    }
                  }
                },
                "globalFilters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "DATE_RANGE",
                          "BREAKDOWN",
                          "SEGMENT",
                          "EXCLUDE_ITEM_IDS"
                        ]
                      },
                      "dimension": {
                        "type": "string"
                      },
                      "itemId": {
                        "type": "string"
                      },
                      "itemIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "segmentId": {
                        "type": "string"
                      },
                      "segmentDefinition": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "dateRange": {
                        "type": "string"
                      },
                      "excludeItemIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allocationModel": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          },
                          "expiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "beforeEvents",
                                  "inactivity",
                                  "container"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "context": {
                                "type": "string"
                              }
                            }
                          },
                          "lookbackExpiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            }
                          },
                          "merchandising": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "nonMerchandising",
                                  "forced",
                                  "auto"
                                ]
                              },
                              "bindingCriteria": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "events"
                                    ]
                                  },
                                  "bindingEvents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "context": {
                            "type": "string"
                          },
                          "firstWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "middleWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "lastWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeNumPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeGranularity": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "search": {
                  "type": "object",
                  "properties": {
                    "clause": {
                      "type": "string"
                    },
                    "excludeItemIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "itemIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "empty": {
                      "type": "boolean"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "page": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "dimensionSort": {
                      "type": "string"
                    },
                    "countRepeatInstances": {
                      "type": "boolean"
                    },
                    "reflectRequest": {
                      "type": "boolean"
                    },
                    "suiteReportingContext": {
                      "type": "string",
                      "enum": [
                        "DEVICE",
                        "TROMMEL_COMBINED"
                      ]
                    },
                    "includeAnomalyDetection": {
                      "type": "boolean"
                    },
                    "includePercentChange": {
                      "type": "boolean"
                    },
                    "sessionExpiration": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "afterEvents",
                              "inactivity",
                              "container",
                              "beforeEvents"
                            ]
                          },
                          "events": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "granularity": {
                            "type": "string"
                          },
                          "numPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "containerName": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "darkSessionsEnabled": {
                      "type": "boolean"
                    },
                    "includeLatLong": {
                      "type": "boolean"
                    },
                    "dataSchema": {
                      "type": "string"
                    },
                    "justStitchedDataSchema": {
                      "type": "boolean"
                    },
                    "sampling": {
                      "type": "number",
                      "format": "double"
                    },
                    "samplingSeed": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "samplingUpSample": {
                      "type": "boolean"
                    },
                    "nonesBehavior": {
                      "type": "string"
                    }
                  }
                },
                "statistics": {
                  "type": "object",
                  "properties": {
                    "functions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ignoreZeroes": {
                      "type": "boolean"
                    }
                  }
                },
                "metricContainer": {
                  "type": "object",
                  "properties": {
                    "metricFilters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "DATE_RANGE",
                              "BREAKDOWN",
                              "SEGMENT",
                              "EXCLUDE_ITEM_IDS"
                            ]
                          },
                          "dimension": {
                            "type": "string"
                          },
                          "itemId": {
                            "type": "string"
                          },
                          "itemIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "segmentId": {
                            "type": "string"
                          },
                          "segmentDefinition": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "dateRange": {
                            "type": "string"
                          },
                          "excludeItemIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allocationModel": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "ALLOCATION_FIRST_TOUCH",
                                  "ALLOCATION_FIRST_TOUCH_DIM",
                                  "ALLOCATION_LAST_TOUCH",
                                  "ALLOCATION_LAST_TOUCH_DIM",
                                  "ALLOCATION_INSTANCE",
                                  "ALLOCATION_DEDUPED_INSTANCE",
                                  "ALLOCATION_LAST_KNOWN",
                                  "ALLOCATION_LEGACY",
                                  "ALLOCATION_LINEAR",
                                  "ALLOCATION_PARTICIPATION",
                                  "ALLOCATION_PARTICIPATION_DIM",
                                  "ALLOCATION_POSITION_BASED",
                                  "ALLOCATION_TIME_DECAY",
                                  "ALLOCATION_U_SHAPED",
                                  "ALLOCATION_J_SHAPED",
                                  "ALLOCATION_REVERSE_J_SHAPED",
                                  "ALLOCATION_DEDUPED_LINEAR",
                                  "ALLOCATION_ALGORITHMIC"
                                ]
                              },
                              "expiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "afterEvents",
                                      "beforeEvents",
                                      "inactivity",
                                      "container"
                                    ]
                                  },
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "context": {
                                    "type": "string"
                                  }
                                }
                              },
                              "lookbackExpiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string"
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "merchandising": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "nonMerchandising",
                                      "forced",
                                      "auto"
                                    ]
                                  },
                                  "bindingCriteria": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "events"
                                        ]
                                      },
                                      "bindingEvents": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "context": {
                                "type": "string"
                              },
                              "firstWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "middleWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "lastWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeNumPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeGranularity": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "columnId": {
                            "type": "string"
                          },
                          "allocationType": {
                            "type": "string"
                          },
                          "allocationModel": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "ALLOCATION_FIRST_TOUCH",
                                  "ALLOCATION_FIRST_TOUCH_DIM",
                                  "ALLOCATION_LAST_TOUCH",
                                  "ALLOCATION_LAST_TOUCH_DIM",
                                  "ALLOCATION_INSTANCE",
                                  "ALLOCATION_DEDUPED_INSTANCE",
                                  "ALLOCATION_LAST_KNOWN",
                                  "ALLOCATION_LEGACY",
                                  "ALLOCATION_LINEAR",
                                  "ALLOCATION_PARTICIPATION",
                                  "ALLOCATION_PARTICIPATION_DIM",
                                  "ALLOCATION_POSITION_BASED",
                                  "ALLOCATION_TIME_DECAY",
                                  "ALLOCATION_U_SHAPED",
                                  "ALLOCATION_J_SHAPED",
                                  "ALLOCATION_REVERSE_J_SHAPED",
                                  "ALLOCATION_DEDUPED_LINEAR",
                                  "ALLOCATION_ALGORITHMIC"
                                ]
                              },
                              "expiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "afterEvents",
                                      "beforeEvents",
                                      "inactivity",
                                      "container"
                                    ]
                                  },
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "context": {
                                    "type": "string"
                                  }
                                }
                              },
                              "lookbackExpiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string"
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "merchandising": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "nonMerchandising",
                                      "forced",
                                      "auto"
                                    ]
                                  },
                                  "bindingCriteria": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "events"
                                        ]
                                      },
                                      "bindingEvents": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "context": {
                                "type": "string"
                              },
                              "firstWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "middleWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "lastWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeNumPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeGranularity": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            }
                          },
                          "lookback": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            }
                          },
                          "filters": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sort": {
                            "type": "string"
                          },
                          "metricDefinition": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "metricView": {
                            "type": "string"
                          },
                          "predictive": {
                            "type": "object",
                            "properties": {
                              "anomalyConfidence": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "rowContainer": {
                  "type": "object",
                  "properties": {
                    "rowFilters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "DATE_RANGE",
                              "BREAKDOWN",
                              "SEGMENT",
                              "EXCLUDE_ITEM_IDS"
                            ]
                          },
                          "dimension": {
                            "type": "string"
                          },
                          "itemId": {
                            "type": "string"
                          },
                          "itemIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "segmentId": {
                            "type": "string"
                          },
                          "segmentDefinition": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "dateRange": {
                            "type": "string"
                          },
                          "excludeItemIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allocationModel": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "ALLOCATION_FIRST_TOUCH",
                                  "ALLOCATION_FIRST_TOUCH_DIM",
                                  "ALLOCATION_LAST_TOUCH",
                                  "ALLOCATION_LAST_TOUCH_DIM",
                                  "ALLOCATION_INSTANCE",
                                  "ALLOCATION_DEDUPED_INSTANCE",
                                  "ALLOCATION_LAST_KNOWN",
                                  "ALLOCATION_LEGACY",
                                  "ALLOCATION_LINEAR",
                                  "ALLOCATION_PARTICIPATION",
                                  "ALLOCATION_PARTICIPATION_DIM",
                                  "ALLOCATION_POSITION_BASED",
                                  "ALLOCATION_TIME_DECAY",
                                  "ALLOCATION_U_SHAPED",
                                  "ALLOCATION_J_SHAPED",
                                  "ALLOCATION_REVERSE_J_SHAPED",
                                  "ALLOCATION_DEDUPED_LINEAR",
                                  "ALLOCATION_ALGORITHMIC"
                                ]
                              },
                              "expiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "afterEvents",
                                      "beforeEvents",
                                      "inactivity",
                                      "container"
                                    ]
                                  },
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "context": {
                                    "type": "string"
                                  }
                                }
                              },
                              "lookbackExpiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string"
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "merchandising": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "nonMerchandising",
                                      "forced",
                                      "auto"
                                    ]
                                  },
                                  "bindingCriteria": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "events"
                                        ]
                                      },
                                      "bindingEvents": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "context": {
                                "type": "string"
                              },
                              "firstWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "middleWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "lastWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeNumPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeGranularity": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rowId": {
                            "type": "string"
                          },
                          "filters": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "globalPredictiveSettings": {
                  "type": "object",
                  "properties": {
                    "trainingPeriods": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "highAnomalies": {
                      "type": "boolean"
                    },
                    "lowAnomalies": {
                      "type": "boolean"
                    }
                  }
                },
                "anchorDate": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "totalPages": {
                  "type": "integer",
                  "format": "int32"
                },
                "firstPage": {
                  "type": "boolean"
                },
                "lastPage": {
                  "type": "boolean"
                },
                "numberOfElements": {
                  "type": "integer",
                  "format": "int32"
                },
                "number": {
                  "type": "integer",
                  "format": "int32"
                },
                "totalElements": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "request": {
                  "type": "object",
                  "properties": {
                    "rsid": {
                      "type": "string"
                    },
                    "dataId": {
                      "type": "string"
                    },
                    "dimension": {
                      "type": "string"
                    },
                    "locale": {
                      "type": "object",
                      "properties": {
                        "script": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "string"
                        },
                        "extensionKeys": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleAttributes": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "unicodeLocaleKeys": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "iso3Language": {
                          "type": "string"
                        },
                        "iso3Country": {
                          "type": "string"
                        },
                        "displayLanguage": {
                          "type": "string"
                        },
                        "displayScript": {
                          "type": "string"
                        },
                        "displayCountry": {
                          "type": "string"
                        },
                        "displayVariant": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "language": {
                          "type": "string"
                        }
                      }
                    },
                    "globalFilters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "DATE_RANGE",
                              "BREAKDOWN",
                              "SEGMENT",
                              "EXCLUDE_ITEM_IDS"
                            ]
                          },
                          "dimension": {
                            "type": "string"
                          },
                          "itemId": {
                            "type": "string"
                          },
                          "itemIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "segmentId": {
                            "type": "string"
                          },
                          "segmentDefinition": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "dateRange": {
                            "type": "string"
                          },
                          "excludeItemIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allocationModel": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "ALLOCATION_FIRST_TOUCH",
                                  "ALLOCATION_FIRST_TOUCH_DIM",
                                  "ALLOCATION_LAST_TOUCH",
                                  "ALLOCATION_LAST_TOUCH_DIM",
                                  "ALLOCATION_INSTANCE",
                                  "ALLOCATION_DEDUPED_INSTANCE",
                                  "ALLOCATION_LAST_KNOWN",
                                  "ALLOCATION_LEGACY",
                                  "ALLOCATION_LINEAR",
                                  "ALLOCATION_PARTICIPATION",
                                  "ALLOCATION_PARTICIPATION_DIM",
                                  "ALLOCATION_POSITION_BASED",
                                  "ALLOCATION_TIME_DECAY",
                                  "ALLOCATION_U_SHAPED",
                                  "ALLOCATION_J_SHAPED",
                                  "ALLOCATION_REVERSE_J_SHAPED",
                                  "ALLOCATION_DEDUPED_LINEAR",
                                  "ALLOCATION_ALGORITHMIC"
                                ]
                              },
                              "expiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "afterEvents",
                                      "beforeEvents",
                                      "inactivity",
                                      "container"
                                    ]
                                  },
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "context": {
                                    "type": "string"
                                  }
                                }
                              },
                              "lookbackExpiration": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string"
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "merchandising": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "nonMerchandising",
                                      "forced",
                                      "auto"
                                    ]
                                  },
                                  "bindingCriteria": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "events"
                                        ]
                                      },
                                      "bindingEvents": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "context": {
                                "type": "string"
                              },
                              "firstWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "middleWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "lastWeight": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeNumPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "halfLifeGranularity": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "search": {
                      "type": "object",
                      "properties": {
                        "clause": {
                          "type": "string"
                        },
                        "excludeItemIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "itemIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "empty": {
                          "type": "boolean"
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "limit": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "page": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "dimensionSort": {
                          "type": "string"
                        },
                        "countRepeatInstances": {
                          "type": "boolean"
                        },
                        "reflectRequest": {
                          "type": "boolean"
                        },
                        "suiteReportingContext": {
                          "type": "string",
                          "enum": [
                            "DEVICE",
                            "TROMMEL_COMBINED"
                          ]
                        },
                        "includeAnomalyDetection": {
                          "type": "boolean"
                        },
                        "includePercentChange": {
                          "type": "boolean"
                        },
                        "sessionExpiration": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "inactivity",
                                  "container",
                                  "beforeEvents"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "containerName": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "darkSessionsEnabled": {
                          "type": "boolean"
                        },
                        "includeLatLong": {
                          "type": "boolean"
                        },
                        "dataSchema": {
                          "type": "string"
                        },
                        "justStitchedDataSchema": {
                          "type": "boolean"
                        },
                        "sampling": {
                          "type": "number",
                          "format": "double"
                        },
                        "samplingSeed": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "samplingUpSample": {
                          "type": "boolean"
                        },
                        "nonesBehavior": {
                          "type": "string"
                        }
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "functions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoreZeroes": {
                          "type": "boolean"
                        }
                      }
                    },
                    "metricContainer": {
                      "type": "object",
                      "properties": {
                        "metricFilters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "DATE_RANGE",
                                  "BREAKDOWN",
                                  "SEGMENT",
                                  "EXCLUDE_ITEM_IDS"
                                ]
                              },
                              "dimension": {
                                "type": "string"
                              },
                              "itemId": {
                                "type": "string"
                              },
                              "itemIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "segmentId": {
                                "type": "string"
                              },
                              "segmentDefinition": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              },
                              "dateRange": {
                                "type": "string"
                              },
                              "excludeItemIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "allocationModel": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "ALLOCATION_FIRST_TOUCH",
                                      "ALLOCATION_FIRST_TOUCH_DIM",
                                      "ALLOCATION_LAST_TOUCH",
                                      "ALLOCATION_LAST_TOUCH_DIM",
                                      "ALLOCATION_INSTANCE",
                                      "ALLOCATION_DEDUPED_INSTANCE",
                                      "ALLOCATION_LAST_KNOWN",
                                      "ALLOCATION_LEGACY",
                                      "ALLOCATION_LINEAR",
                                      "ALLOCATION_PARTICIPATION",
                                      "ALLOCATION_PARTICIPATION_DIM",
                                      "ALLOCATION_POSITION_BASED",
                                      "ALLOCATION_TIME_DECAY",
                                      "ALLOCATION_U_SHAPED",
                                      "ALLOCATION_J_SHAPED",
                                      "ALLOCATION_REVERSE_J_SHAPED",
                                      "ALLOCATION_DEDUPED_LINEAR",
                                      "ALLOCATION_ALGORITHMIC"
                                    ]
                                  },
                                  "expiration": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "afterEvents",
                                          "beforeEvents",
                                          "inactivity",
                                          "container"
                                        ]
                                      },
                                      "events": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "granularity": {
                                        "type": "string"
                                      },
                                      "numPeriods": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "context": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "lookbackExpiration": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string"
                                      },
                                      "granularity": {
                                        "type": "string"
                                      },
                                      "numPeriods": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "enabled": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "merchandising": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "nonMerchandising",
                                          "forced",
                                          "auto"
                                        ]
                                      },
                                      "bindingCriteria": {
                                        "type": "object",
                                        "properties": {
                                          "func": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "events"
                                            ]
                                          },
                                          "bindingEvents": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "context": {
                                    "type": "string"
                                  },
                                  "firstWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "middleWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "lastWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "halfLifeNumPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "halfLifeGranularity": {
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "metrics": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "columnId": {
                                "type": "string"
                              },
                              "allocationType": {
                                "type": "string"
                              },
                              "allocationModel": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "ALLOCATION_FIRST_TOUCH",
                                      "ALLOCATION_FIRST_TOUCH_DIM",
                                      "ALLOCATION_LAST_TOUCH",
                                      "ALLOCATION_LAST_TOUCH_DIM",
                                      "ALLOCATION_INSTANCE",
                                      "ALLOCATION_DEDUPED_INSTANCE",
                                      "ALLOCATION_LAST_KNOWN",
                                      "ALLOCATION_LEGACY",
                                      "ALLOCATION_LINEAR",
                                      "ALLOCATION_PARTICIPATION",
                                      "ALLOCATION_PARTICIPATION_DIM",
                                      "ALLOCATION_POSITION_BASED",
                                      "ALLOCATION_TIME_DECAY",
                                      "ALLOCATION_U_SHAPED",
                                      "ALLOCATION_J_SHAPED",
                                      "ALLOCATION_REVERSE_J_SHAPED",
                                      "ALLOCATION_DEDUPED_LINEAR",
                                      "ALLOCATION_ALGORITHMIC"
                                    ]
                                  },
                                  "expiration": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "afterEvents",
                                          "beforeEvents",
                                          "inactivity",
                                          "container"
                                        ]
                                      },
                                      "events": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "granularity": {
                                        "type": "string"
                                      },
                                      "numPeriods": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "context": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "lookbackExpiration": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string"
                                      },
                                      "granularity": {
                                        "type": "string"
                                      },
                                      "numPeriods": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "enabled": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "merchandising": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "nonMerchandising",
                                          "forced",
                                          "auto"
                                        ]
                                      },
                                      "bindingCriteria": {
                                        "type": "object",
                                        "properties": {
                                          "func": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "events"
                                            ]
                                          },
                                          "bindingEvents": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "context": {
                                    "type": "string"
                                  },
                                  "firstWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "middleWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "lastWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "halfLifeNumPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "halfLifeGranularity": {
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "lookback": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string"
                                  },
                                  "granularity": {
                                    "type": "string"
                                  },
                                  "numPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "sort": {
                                "type": "string"
                              },
                              "metricDefinition": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              },
                              "metricView": {
                                "type": "string"
                              },
                              "predictive": {
                                "type": "object",
                                "properties": {
                                  "anomalyConfidence": {
                                    "type": "number",
                                    "format": "double"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "rowContainer": {
                      "type": "object",
                      "properties": {
                        "rowFilters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "DATE_RANGE",
                                  "BREAKDOWN",
                                  "SEGMENT",
                                  "EXCLUDE_ITEM_IDS"
                                ]
                              },
                              "dimension": {
                                "type": "string"
                              },
                              "itemId": {
                                "type": "string"
                              },
                              "itemIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "segmentId": {
                                "type": "string"
                              },
                              "segmentDefinition": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              },
                              "dateRange": {
                                "type": "string"
                              },
                              "excludeItemIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "allocationModel": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "ALLOCATION_FIRST_TOUCH",
                                      "ALLOCATION_FIRST_TOUCH_DIM",
                                      "ALLOCATION_LAST_TOUCH",
                                      "ALLOCATION_LAST_TOUCH_DIM",
                                      "ALLOCATION_INSTANCE",
                                      "ALLOCATION_DEDUPED_INSTANCE",
                                      "ALLOCATION_LAST_KNOWN",
                                      "ALLOCATION_LEGACY",
                                      "ALLOCATION_LINEAR",
                                      "ALLOCATION_PARTICIPATION",
                                      "ALLOCATION_PARTICIPATION_DIM",
                                      "ALLOCATION_POSITION_BASED",
                                      "ALLOCATION_TIME_DECAY",
                                      "ALLOCATION_U_SHAPED",
                                      "ALLOCATION_J_SHAPED",
                                      "ALLOCATION_REVERSE_J_SHAPED",
                                      "ALLOCATION_DEDUPED_LINEAR",
                                      "ALLOCATION_ALGORITHMIC"
                                    ]
                                  },
                                  "expiration": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "afterEvents",
                                          "beforeEvents",
                                          "inactivity",
                                          "container"
                                        ]
                                      },
                                      "events": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "granularity": {
                                        "type": "string"
                                      },
                                      "numPeriods": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "context": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "lookbackExpiration": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string"
                                      },
                                      "granularity": {
                                        "type": "string"
                                      },
                                      "numPeriods": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "enabled": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "merchandising": {
                                    "type": "object",
                                    "properties": {
                                      "func": {
                                        "type": "string",
                                        "enum": [
                                          "nonMerchandising",
                                          "forced",
                                          "auto"
                                        ]
                                      },
                                      "bindingCriteria": {
                                        "type": "object",
                                        "properties": {
                                          "func": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "events"
                                            ]
                                          },
                                          "bindingEvents": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "context": {
                                    "type": "string"
                                  },
                                  "firstWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "middleWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "lastWeight": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "halfLifeNumPeriods": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "halfLifeGranularity": {
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rowId": {
                                "type": "string"
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "globalPredictiveSettings": {
                      "type": "object",
                      "properties": {
                        "trainingPeriods": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "highAnomalies": {
                          "type": "boolean"
                        },
                        "lowAnomalies": {
                          "type": "boolean"
                        }
                      }
                    },
                    "anchorDate": {
                      "type": "string"
                    }
                  }
                },
                "reportId": {
                  "type": "string"
                },
                "columns": {
                  "type": "object",
                  "properties": {
                    "dimension": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "STRING",
                            "BOOLEAN",
                            "INT",
                            "DECIMAL",
                            "CURRENCY",
                            "PERCENT",
                            "TIME",
                            "ENUM",
                            "ORDERED_ENUM"
                          ]
                        }
                      }
                    },
                    "columnIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "columnErrors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "columnId": {
                            "type": "string"
                          },
                          "errorCode": {
                            "type": "string",
                            "enum": [
                              "unauthorized_metric",
                              "unauthorized_dimension",
                              "unauthorized_dimension_global",
                              "unauthorized_segment",
                              "anomaly_detection_failure_unexpected_item_count",
                              "anomaly_detection_failure_tsa_service",
                              "not_enabled_metric",
                              "not_enabled_dimension",
                              "not_enabled_dimension_global"
                            ]
                          },
                          "errorId": {
                            "type": "string"
                          },
                          "errorDescription": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "rows": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "itemId": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "rowId": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "double"
                        }
                      },
                      "dataExpected": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "double"
                        }
                      },
                      "dataUpperBound": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "double"
                        }
                      },
                      "dataLowerBound": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "double"
                        }
                      },
                      "dataAnomalyDetected": {
                        "type": "array",
                        "items": {
                          "type": "boolean"
                        }
                      },
                      "percentChange": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "double"
                        }
                      },
                      "latitude": {
                        "type": "number",
                        "format": "double"
                      },
                      "longitude": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  }
                },
                "summaryData": {
                  "type": "object"
                },
                "oberonRequestXML": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "oberonResponseXML": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "predictiveRequestObjects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "predictiveResponseObjects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input; name, dataId, and definition are all required. Definition must be formatted as a JSON Object.",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_segment_ids_found",
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/reports/topItems": {
      "get": {
        "tags": [
          "Reporting API"
        ],
        "summary": "Returns a top items report for the given dimension",
        "description": "Get the top X items (based on paging restriction) for the specified dimension and dataId. Defaults to last 90 days.\n\nSearch Clause examples:\ncontains test: 'test'\n\n contains test or test1: 'test' OR 'test1'\n\ncontains test and test1: 'test' AND 'test1'\n\ncontains test and not (test1 or test2): 'test' AND NOT ('test1' OR 'test2')\n\ndoes not contain test: NOT 'test'\n\n",
        "operationId": "NonCustomerFacingDoc",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataId",
            "in": "query",
            "description": "Data Group or Data View to run the report against",
            "required": true,
            "type": "string"
          },
          {
            "name": "dimension",
            "in": "query",
            "description": "Dimension to run the report against. Example: \"variables/page\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "dateRange",
            "in": "query",
            "description": "Format: YYYY-MM-DD/YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "search-clause",
            "in": "query",
            "description": "General search string; wrap with single quotes. Example: 'PageABC'",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Format: YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Format: YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchAnd",
            "in": "query",
            "description": "Search terms that will be AND-ed together. Space delimited.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOr",
            "in": "query",
            "description": "Search terms that will be OR-ed together. Space delimited.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchNot",
            "in": "query",
            "description": "Search terms that will be treated as NOT including. Space delimited.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchPhrase",
            "in": "query",
            "description": "A full search phrase that will be searched for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "allowRemoteLoad",
            "in": "query",
            "description": "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist",
            "required": false,
            "type": "string",
            "default": "default",
            "enum": [
              "true",
              "false",
              "default"
            ]
          },
          {
            "name": "includeOberonXml",
            "in": "query",
            "description": "Controls if Oberon XML should be returned in the response - DEBUG ONLY",
            "required": false,
            "type": "boolean",
            "default": false,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "lookupNoneValues",
            "in": "query",
            "description": "Controls None values to be included",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "totalPages": {
                  "type": "integer",
                  "format": "int32"
                },
                "firstPage": {
                  "type": "boolean"
                },
                "lastPage": {
                  "type": "boolean"
                },
                "numberOfElements": {
                  "type": "integer",
                  "format": "int32"
                },
                "number": {
                  "type": "integer",
                  "format": "int32"
                },
                "totalElements": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "reportId": {
                  "type": "string"
                },
                "searchAnd": {
                  "type": "string"
                },
                "searchOr": {
                  "type": "string"
                },
                "searchNot": {
                  "type": "string"
                },
                "searchPhrase": {
                  "type": "string"
                },
                "rows": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "itemId": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "oberonRequestXML": {
                  "type": "string"
                },
                "oberonResponseXML": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "User does not have access to run this report"
          },
          "500": {
            "description": "Unexpected error; failed to run report"
          }
        }
      }
    },
    "/datagroups/data/{dataviewId}/dimensions": {
      "get": {
        "tags": [
          "Dimensions API"
        ],
        "summary": "Retrieval of dimensions for a dataview",
        "description": "Used to retrieve dimensions for a dataview",
        "operationId": "getDimensionsForDataview_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataviewId",
            "in": "path",
            "description": "The id of the DataView for which to retrieve Dimensions",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeType",
            "in": "query",
            "description": "Comma separated list of include types",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "hidden"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "approved",
                "favorite",
                "tags",
                "usageSummary",
                "usageSummaryWithRelevancyScore",
                "description",
                "sourceFieldId",
                "segmentable",
                "required",
                "hideFromReporting",
                "hidden",
                "includeExcludeSetting",
                "fieldDefinition",
                "bucketingSetting",
                "noValueOptionsSetting",
                "defaultDimensionSort",
                "persistenceSetting",
                "storageId",
                "tableName",
                "dataSetIds",
                "dataSetType",
                "type",
                "schemaPath",
                "hasData",
                "sourceFieldName",
                "schemaType",
                "sourceFieldType",
                "fromGlobalLookup",
                "multiValued",
                "precision"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sourceFieldId": {
                  "type": "string"
                },
                "sourceFieldName": {
                  "type": "string"
                },
                "storageId": {
                  "type": "string"
                },
                "dataSetIds": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "dataSetType": {
                  "type": "string",
                  "enum": [
                    "EVENT",
                    "LOOKUP",
                    "PROFILE"
                  ]
                },
                "schemaType": {
                  "type": "string"
                },
                "sourceFieldType": {
                  "type": "string"
                },
                "tableName": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "BOOLEAN",
                    "INT",
                    "DECIMAL",
                    "CURRENCY",
                    "PERCENT",
                    "TIME",
                    "ENUM",
                    "ORDERED_ENUM"
                  ]
                },
                "required": {
                  "type": "boolean"
                },
                "hideFromReporting": {
                  "type": "boolean"
                },
                "schemaPath": {
                  "type": "string"
                },
                "hasData": {
                  "type": "boolean"
                },
                "segmentable": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "approved": {
                  "type": "boolean"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "notFound": {
                  "type": "boolean"
                },
                "hidden": {
                  "type": "boolean"
                },
                "fromGlobalLookup": {
                  "type": "boolean"
                },
                "multiValued": {
                  "type": "boolean"
                },
                "includeExcludeSetting": {
                  "type": "object",
                  "properties": {
                    "caseSensitive": {
                      "type": "boolean"
                    },
                    "match": {
                      "type": "string",
                      "enum": [
                        "and",
                        "or"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "numeric",
                        "date"
                      ]
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "clause": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                },
                "fieldDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "RAW_FIELD",
                          "MATCH",
                          "FLOOR"
                        ]
                      },
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "branches": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pred": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "AND",
                                    "OR",
                                    "NOT",
                                    "ISSET",
                                    "TRUE",
                                    "EQ",
                                    "GE",
                                    "GT",
                                    "LE",
                                    "LT",
                                    "CONTAINS",
                                    "STREQ",
                                    "STARTS_WITH",
                                    "ENDS_WITH"
                                  ]
                                },
                                "preds": {
                                  "type": "array",
                                  "items": {
                                    "ref": "#/definitions/FDLPredicate"
                                  }
                                },
                                "pred": {
                                  "ref": "#/definitions/FDLPredicate"
                                },
                                "val": {
                                  "type": "object"
                                }
                              }
                            },
                            "map-to": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "oberon-storage-type": {
                        "type": "string"
                      },
                      "oberon-table": {
                        "type": "string"
                      },
                      "oberon-field": {
                        "type": "string"
                      },
                      "oberon-storage-id": {
                        "type": "string"
                      },
                      "case-sensitive": {
                        "type": "boolean"
                      },
                      "mapped-type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bucketingSetting": {
                  "type": "object",
                  "properties": {
                    "bucketSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number"
                          },
                          "to": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                },
                "noValueOptionsSetting": {
                  "type": "object",
                  "properties": {
                    "option": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "defaultDimensionSort": {
                  "type": "boolean"
                },
                "persistenceSetting": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "allocationModel": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string",
                          "enum": [
                            "ALLOCATION_FIRST_TOUCH",
                            "ALLOCATION_FIRST_TOUCH_DIM",
                            "ALLOCATION_LAST_TOUCH",
                            "ALLOCATION_LAST_TOUCH_DIM",
                            "ALLOCATION_INSTANCE",
                            "ALLOCATION_DEDUPED_INSTANCE",
                            "ALLOCATION_LAST_KNOWN",
                            "ALLOCATION_LEGACY",
                            "ALLOCATION_LINEAR",
                            "ALLOCATION_PARTICIPATION",
                            "ALLOCATION_PARTICIPATION_DIM",
                            "ALLOCATION_POSITION_BASED",
                            "ALLOCATION_TIME_DECAY",
                            "ALLOCATION_U_SHAPED",
                            "ALLOCATION_J_SHAPED",
                            "ALLOCATION_REVERSE_J_SHAPED",
                            "ALLOCATION_DEDUPED_LINEAR",
                            "ALLOCATION_ALGORITHMIC"
                          ]
                        },
                        "expiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "afterEvents",
                                "beforeEvents",
                                "inactivity",
                                "container"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "context": {
                              "type": "string"
                            }
                          }
                        },
                        "lookbackExpiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string"
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        },
                        "merchandising": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "nonMerchandising",
                                "forced",
                                "auto"
                              ]
                            },
                            "bindingCriteria": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "always",
                                    "events"
                                  ]
                                },
                                "bindingEvents": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "context": {
                          "type": "string"
                        },
                        "firstWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "middleWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "lastWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeNumPeriods": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeGranularity": {
                          "type": "string"
                        }
                      }
                    },
                    "lookback": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string"
                        },
                        "granularity": {
                          "type": "string"
                        },
                        "numPeriods": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Could not find dimensions for dataview with given parameters",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while retrieving dimensions",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/datagroups/data/{dataviewId}/dimensions/{dimensionId}": {
      "get": {
        "tags": [
          "Dimensions API"
        ],
        "summary": "Retrieval of a specific dimension for a dataview",
        "description": "Used to retrieve a specific dimension for a dataview",
        "operationId": "getDimensionById_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataviewId",
            "in": "path",
            "description": "The id of the DataView the dimension is tied to",
            "required": true,
            "type": "string"
          },
          {
            "name": "dimensionId",
            "in": "path",
            "description": "The id of the dimension to retrieve, must have the variables/ removed from the ID. For example \"daterangeday\", not \"variables/daterangeday\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "approved",
                "favorite",
                "tags",
                "usageSummary",
                "usageSummaryWithRelevancyScore",
                "description",
                "sourceFieldId",
                "segmentable",
                "required",
                "hideFromReporting",
                "hidden",
                "includeExcludeSetting",
                "fieldDefinition",
                "bucketingSetting",
                "noValueOptionsSetting",
                "defaultDimensionSort",
                "persistenceSetting",
                "storageId",
                "tableName",
                "dataSetIds",
                "dataSetType",
                "type",
                "schemaPath",
                "hasData",
                "sourceFieldName",
                "schemaType",
                "sourceFieldType",
                "fromGlobalLookup",
                "multiValued",
                "precision"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sourceFieldId": {
                  "type": "string"
                },
                "sourceFieldName": {
                  "type": "string"
                },
                "storageId": {
                  "type": "string"
                },
                "dataSetIds": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "dataSetType": {
                  "type": "string",
                  "enum": [
                    "EVENT",
                    "LOOKUP",
                    "PROFILE"
                  ]
                },
                "schemaType": {
                  "type": "string"
                },
                "sourceFieldType": {
                  "type": "string"
                },
                "tableName": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "BOOLEAN",
                    "INT",
                    "DECIMAL",
                    "CURRENCY",
                    "PERCENT",
                    "TIME",
                    "ENUM",
                    "ORDERED_ENUM"
                  ]
                },
                "required": {
                  "type": "boolean"
                },
                "hideFromReporting": {
                  "type": "boolean"
                },
                "schemaPath": {
                  "type": "string"
                },
                "hasData": {
                  "type": "boolean"
                },
                "segmentable": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "approved": {
                  "type": "boolean"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "notFound": {
                  "type": "boolean"
                },
                "hidden": {
                  "type": "boolean"
                },
                "fromGlobalLookup": {
                  "type": "boolean"
                },
                "multiValued": {
                  "type": "boolean"
                },
                "includeExcludeSetting": {
                  "type": "object",
                  "properties": {
                    "caseSensitive": {
                      "type": "boolean"
                    },
                    "match": {
                      "type": "string",
                      "enum": [
                        "and",
                        "or"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "numeric",
                        "date"
                      ]
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "clause": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                },
                "fieldDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "RAW_FIELD",
                          "MATCH",
                          "FLOOR"
                        ]
                      },
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "branches": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pred": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "AND",
                                    "OR",
                                    "NOT",
                                    "ISSET",
                                    "TRUE",
                                    "EQ",
                                    "GE",
                                    "GT",
                                    "LE",
                                    "LT",
                                    "CONTAINS",
                                    "STREQ",
                                    "STARTS_WITH",
                                    "ENDS_WITH"
                                  ]
                                },
                                "preds": {
                                  "type": "array",
                                  "items": {
                                    "ref": "#/definitions/FDLPredicate"
                                  }
                                },
                                "pred": {
                                  "ref": "#/definitions/FDLPredicate"
                                },
                                "val": {
                                  "type": "object"
                                }
                              }
                            },
                            "map-to": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "oberon-storage-type": {
                        "type": "string"
                      },
                      "oberon-table": {
                        "type": "string"
                      },
                      "oberon-field": {
                        "type": "string"
                      },
                      "oberon-storage-id": {
                        "type": "string"
                      },
                      "case-sensitive": {
                        "type": "boolean"
                      },
                      "mapped-type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bucketingSetting": {
                  "type": "object",
                  "properties": {
                    "bucketSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number"
                          },
                          "to": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                },
                "noValueOptionsSetting": {
                  "type": "object",
                  "properties": {
                    "option": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "defaultDimensionSort": {
                  "type": "boolean"
                },
                "persistenceSetting": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "allocationModel": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string",
                          "enum": [
                            "ALLOCATION_FIRST_TOUCH",
                            "ALLOCATION_FIRST_TOUCH_DIM",
                            "ALLOCATION_LAST_TOUCH",
                            "ALLOCATION_LAST_TOUCH_DIM",
                            "ALLOCATION_INSTANCE",
                            "ALLOCATION_DEDUPED_INSTANCE",
                            "ALLOCATION_LAST_KNOWN",
                            "ALLOCATION_LEGACY",
                            "ALLOCATION_LINEAR",
                            "ALLOCATION_PARTICIPATION",
                            "ALLOCATION_PARTICIPATION_DIM",
                            "ALLOCATION_POSITION_BASED",
                            "ALLOCATION_TIME_DECAY",
                            "ALLOCATION_U_SHAPED",
                            "ALLOCATION_J_SHAPED",
                            "ALLOCATION_REVERSE_J_SHAPED",
                            "ALLOCATION_DEDUPED_LINEAR",
                            "ALLOCATION_ALGORITHMIC"
                          ]
                        },
                        "expiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "afterEvents",
                                "beforeEvents",
                                "inactivity",
                                "container"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "context": {
                              "type": "string"
                            }
                          }
                        },
                        "lookbackExpiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string"
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        },
                        "merchandising": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "nonMerchandising",
                                "forced",
                                "auto"
                              ]
                            },
                            "bindingCriteria": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "always",
                                    "events"
                                  ]
                                },
                                "bindingEvents": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "context": {
                          "type": "string"
                        },
                        "firstWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "middleWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "lastWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeNumPeriods": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeGranularity": {
                          "type": "string"
                        }
                      }
                    },
                    "lookback": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string"
                        },
                        "granularity": {
                          "type": "string"
                        },
                        "numPeriods": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Could not find dimensions for dataview with given parameters",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while retrieving dimensions",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/datagroups/data/{dataviewId}/metrics": {
      "get": {
        "tags": [
          "Metrics API"
        ],
        "summary": "Retrieval of metrics for a dataview",
        "description": "Used to retrieve metrics for a dataview",
        "operationId": "getMetricsForDataview_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataviewId",
            "in": "path",
            "description": "The id of the DataView for which to retrieve Metrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeType",
            "in": "query",
            "description": "Comma separated list of include types",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "hidden"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "approved",
                "favorite",
                "tags",
                "usageSummary",
                "usageSummaryWithRelevancyScore",
                "description",
                "sourceFieldId",
                "segmentable",
                "required",
                "hideFromReporting",
                "hidden",
                "includeExcludeSetting",
                "fieldDefinition",
                "countType",
                "formatSetting",
                "attributionSetting",
                "storageId",
                "tableName",
                "dataSetIds",
                "dataSetType",
                "type",
                "schemaPath",
                "hasData",
                "sourceFieldName",
                "schemaType",
                "sourceFieldType",
                "fromGlobalLookup",
                "multiValued",
                "precision"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sourceFieldId": {
                  "type": "string"
                },
                "sourceFieldName": {
                  "type": "string"
                },
                "storageId": {
                  "type": "string"
                },
                "dataSetIds": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "dataSetType": {
                  "type": "string",
                  "enum": [
                    "EVENT",
                    "LOOKUP",
                    "PROFILE"
                  ]
                },
                "schemaType": {
                  "type": "string"
                },
                "sourceFieldType": {
                  "type": "string"
                },
                "tableName": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "BOOLEAN",
                    "INT",
                    "DECIMAL",
                    "CURRENCY",
                    "PERCENT",
                    "TIME",
                    "ENUM",
                    "ORDERED_ENUM"
                  ]
                },
                "required": {
                  "type": "boolean"
                },
                "hideFromReporting": {
                  "type": "boolean"
                },
                "schemaPath": {
                  "type": "string"
                },
                "hasData": {
                  "type": "boolean"
                },
                "segmentable": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "approved": {
                  "type": "boolean"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "notFound": {
                  "type": "boolean"
                },
                "hidden": {
                  "type": "boolean"
                },
                "fromGlobalLookup": {
                  "type": "boolean"
                },
                "multiValued": {
                  "type": "boolean"
                },
                "includeExcludeSetting": {
                  "type": "object",
                  "properties": {
                    "caseSensitive": {
                      "type": "boolean"
                    },
                    "match": {
                      "type": "string",
                      "enum": [
                        "and",
                        "or"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "numeric",
                        "date"
                      ]
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "clause": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                },
                "fieldDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "RAW_FIELD",
                          "MATCH",
                          "FLOOR"
                        ]
                      },
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "branches": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pred": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "AND",
                                    "OR",
                                    "NOT",
                                    "ISSET",
                                    "TRUE",
                                    "EQ",
                                    "GE",
                                    "GT",
                                    "LE",
                                    "LT",
                                    "CONTAINS",
                                    "STREQ",
                                    "STARTS_WITH",
                                    "ENDS_WITH"
                                  ]
                                },
                                "preds": {
                                  "type": "array",
                                  "items": {
                                    "ref": "#/definitions/FDLPredicate"
                                  }
                                },
                                "pred": {
                                  "ref": "#/definitions/FDLPredicate"
                                },
                                "val": {
                                  "type": "object"
                                }
                              }
                            },
                            "map-to": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "oberon-storage-type": {
                        "type": "string"
                      },
                      "oberon-table": {
                        "type": "string"
                      },
                      "oberon-field": {
                        "type": "string"
                      },
                      "oberon-storage-id": {
                        "type": "string"
                      },
                      "case-sensitive": {
                        "type": "boolean"
                      },
                      "mapped-type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "countType": {
                  "type": "string",
                  "enum": [
                    "instances",
                    "values"
                  ]
                },
                "formatSetting": {
                  "type": "object",
                  "properties": {
                    "polarity": {
                      "type": "string"
                    },
                    "formatType": {
                      "type": "string"
                    },
                    "decimalPlaces": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "attributionSetting": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "attributionModel": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string",
                          "enum": [
                            "ALLOCATION_FIRST_TOUCH",
                            "ALLOCATION_FIRST_TOUCH_DIM",
                            "ALLOCATION_LAST_TOUCH",
                            "ALLOCATION_LAST_TOUCH_DIM",
                            "ALLOCATION_INSTANCE",
                            "ALLOCATION_DEDUPED_INSTANCE",
                            "ALLOCATION_LAST_KNOWN",
                            "ALLOCATION_LEGACY",
                            "ALLOCATION_LINEAR",
                            "ALLOCATION_PARTICIPATION",
                            "ALLOCATION_PARTICIPATION_DIM",
                            "ALLOCATION_POSITION_BASED",
                            "ALLOCATION_TIME_DECAY",
                            "ALLOCATION_U_SHAPED",
                            "ALLOCATION_J_SHAPED",
                            "ALLOCATION_REVERSE_J_SHAPED",
                            "ALLOCATION_DEDUPED_LINEAR",
                            "ALLOCATION_ALGORITHMIC"
                          ]
                        },
                        "expiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "afterEvents",
                                "beforeEvents",
                                "inactivity",
                                "container"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "context": {
                              "type": "string"
                            }
                          }
                        },
                        "lookbackExpiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string"
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        },
                        "merchandising": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "nonMerchandising",
                                "forced",
                                "auto"
                              ]
                            },
                            "bindingCriteria": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "always",
                                    "events"
                                  ]
                                },
                                "bindingEvents": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "context": {
                          "type": "string"
                        },
                        "firstWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "middleWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "lastWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeNumPeriods": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeGranularity": {
                          "type": "string"
                        }
                      }
                    },
                    "lookback": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string"
                        },
                        "granularity": {
                          "type": "string"
                        },
                        "numPeriods": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "precision": {
                  "type": "integer",
                  "format": "int32"
                },
                "isDeleted": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Could not find metrics for dataview with given parameters",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while retrieving metrics",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/datagroups/data/{dataviewId}/metrics/{metricId}": {
      "get": {
        "tags": [
          "Metrics API"
        ],
        "summary": "Retrieval of a specific metric for a dataview",
        "description": "Used to retrieve a specific metric for a dataview",
        "operationId": "getMetricById_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataviewId",
            "in": "path",
            "description": "The id of the DataView the metric is tied to",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricId",
            "in": "path",
            "description": "The id of the metric to retrieve, must have the metrics/ removed from the ID. For example \"visitors\", not \"metrics/visitors\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "approved",
                "favorite",
                "tags",
                "usageSummary",
                "usageSummaryWithRelevancyScore",
                "description",
                "sourceFieldId",
                "segmentable",
                "required",
                "hideFromReporting",
                "hidden",
                "includeExcludeSetting",
                "fieldDefinition",
                "countType",
                "formatSetting",
                "attributionSetting",
                "storageId",
                "tableName",
                "dataSetIds",
                "dataSetType",
                "type",
                "schemaPath",
                "hasData",
                "sourceFieldName",
                "schemaType",
                "sourceFieldType",
                "fromGlobalLookup",
                "multiValued",
                "precision"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sourceFieldId": {
                  "type": "string"
                },
                "sourceFieldName": {
                  "type": "string"
                },
                "storageId": {
                  "type": "string"
                },
                "dataSetIds": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "dataSetType": {
                  "type": "string",
                  "enum": [
                    "EVENT",
                    "LOOKUP",
                    "PROFILE"
                  ]
                },
                "schemaType": {
                  "type": "string"
                },
                "sourceFieldType": {
                  "type": "string"
                },
                "tableName": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "BOOLEAN",
                    "INT",
                    "DECIMAL",
                    "CURRENCY",
                    "PERCENT",
                    "TIME",
                    "ENUM",
                    "ORDERED_ENUM"
                  ]
                },
                "required": {
                  "type": "boolean"
                },
                "hideFromReporting": {
                  "type": "boolean"
                },
                "schemaPath": {
                  "type": "string"
                },
                "hasData": {
                  "type": "boolean"
                },
                "segmentable": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "approved": {
                  "type": "boolean"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "notFound": {
                  "type": "boolean"
                },
                "hidden": {
                  "type": "boolean"
                },
                "fromGlobalLookup": {
                  "type": "boolean"
                },
                "multiValued": {
                  "type": "boolean"
                },
                "includeExcludeSetting": {
                  "type": "object",
                  "properties": {
                    "caseSensitive": {
                      "type": "boolean"
                    },
                    "match": {
                      "type": "string",
                      "enum": [
                        "and",
                        "or"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "numeric",
                        "date"
                      ]
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "clause": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                },
                "fieldDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "func": {
                        "type": "string",
                        "enum": [
                          "RAW_FIELD",
                          "MATCH",
                          "FLOOR"
                        ]
                      },
                      "id": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "branches": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pred": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "AND",
                                    "OR",
                                    "NOT",
                                    "ISSET",
                                    "TRUE",
                                    "EQ",
                                    "GE",
                                    "GT",
                                    "LE",
                                    "LT",
                                    "CONTAINS",
                                    "STREQ",
                                    "STARTS_WITH",
                                    "ENDS_WITH"
                                  ]
                                },
                                "preds": {
                                  "type": "array",
                                  "items": {
                                    "ref": "#/definitions/FDLPredicate"
                                  }
                                },
                                "pred": {
                                  "ref": "#/definitions/FDLPredicate"
                                },
                                "val": {
                                  "type": "object"
                                }
                              }
                            },
                            "map-to": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "oberon-storage-type": {
                        "type": "string"
                      },
                      "oberon-table": {
                        "type": "string"
                      },
                      "oberon-field": {
                        "type": "string"
                      },
                      "oberon-storage-id": {
                        "type": "string"
                      },
                      "case-sensitive": {
                        "type": "boolean"
                      },
                      "mapped-type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "countType": {
                  "type": "string",
                  "enum": [
                    "instances",
                    "values"
                  ]
                },
                "formatSetting": {
                  "type": "object",
                  "properties": {
                    "polarity": {
                      "type": "string"
                    },
                    "formatType": {
                      "type": "string"
                    },
                    "decimalPlaces": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "attributionSetting": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "attributionModel": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string",
                          "enum": [
                            "ALLOCATION_FIRST_TOUCH",
                            "ALLOCATION_FIRST_TOUCH_DIM",
                            "ALLOCATION_LAST_TOUCH",
                            "ALLOCATION_LAST_TOUCH_DIM",
                            "ALLOCATION_INSTANCE",
                            "ALLOCATION_DEDUPED_INSTANCE",
                            "ALLOCATION_LAST_KNOWN",
                            "ALLOCATION_LEGACY",
                            "ALLOCATION_LINEAR",
                            "ALLOCATION_PARTICIPATION",
                            "ALLOCATION_PARTICIPATION_DIM",
                            "ALLOCATION_POSITION_BASED",
                            "ALLOCATION_TIME_DECAY",
                            "ALLOCATION_U_SHAPED",
                            "ALLOCATION_J_SHAPED",
                            "ALLOCATION_REVERSE_J_SHAPED",
                            "ALLOCATION_DEDUPED_LINEAR",
                            "ALLOCATION_ALGORITHMIC"
                          ]
                        },
                        "expiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "afterEvents",
                                "beforeEvents",
                                "inactivity",
                                "container"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "context": {
                              "type": "string"
                            }
                          }
                        },
                        "lookbackExpiration": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string"
                            },
                            "granularity": {
                              "type": "string"
                            },
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        },
                        "merchandising": {
                          "type": "object",
                          "properties": {
                            "func": {
                              "type": "string",
                              "enum": [
                                "nonMerchandising",
                                "forced",
                                "auto"
                              ]
                            },
                            "bindingCriteria": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "always",
                                    "events"
                                  ]
                                },
                                "bindingEvents": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "context": {
                          "type": "string"
                        },
                        "firstWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "middleWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "lastWeight": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeNumPeriods": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "halfLifeGranularity": {
                          "type": "string"
                        }
                      }
                    },
                    "lookback": {
                      "type": "object",
                      "properties": {
                        "func": {
                          "type": "string"
                        },
                        "granularity": {
                          "type": "string"
                        },
                        "numPeriods": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "precision": {
                  "type": "integer",
                  "format": "int32"
                },
                "isDeleted": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Could not find metrics for dataview with given parameters",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while retrieving metrics",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/datagroups/dataviews": {
      "get": {
        "tags": [
          "Dataviews API"
        ],
        "summary": "Retrieval of Data Views for a Company",
        "description": "Used to retrieve Data Views for a company.",
        "operationId": "getDataViewsForCompany",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "description",
                "owner",
                "isDeleted",
                "parentDataGroupId",
                "segmentList",
                "currentTimezoneOffset",
                "timezoneDesignator",
                "modified",
                "createdDate",
                "organization",
                "curationEnabled",
                "recentRecordedAccess",
                "sessionDefinition",
                "curatedComponents",
                "externalData",
                "containerNames"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "parentDataGroupId",
            "in": "query",
            "description": "Filters data views by a single parentDataGroupId",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalIds",
            "in": "query",
            "description": "Comma-delimited list of external ids to limit the response with.",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalParentIds",
            "in": "query",
            "description": "Comma-delimited list of external parent ids to limit the response with.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dataViewIds",
            "in": "query",
            "description": "Comma-delimited list of data view ids to limit the response with.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeType",
            "in": "query",
            "description": "Include additional DataViews not owned by user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "deleted"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "cached",
            "in": "query",
            "description": "return cached results",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC or DESC",
            "required": false,
            "type": "string",
            "default": "ASC"
          },
          {
            "name": "sortProperty",
            "in": "query",
            "description": "Property to sort by (only modifiedDate and id are currently allowed)",
            "required": false,
            "type": "string",
            "default": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "owner": {
                        "type": "object",
                        "properties": {
                          "imsUserId": {
                            "type": "string",
                            "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "isDeleted": {
                        "type": "boolean"
                      },
                      "parentDataGroupId": {
                        "type": "string"
                      },
                      "segmentList": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "currentTimezoneOffset": {
                        "type": "number",
                        "format": "float"
                      },
                      "timezoneDesignator": {
                        "type": "string"
                      },
                      "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "organization": {
                        "type": "string"
                      },
                      "modifiedBy": {
                        "type": "string"
                      },
                      "curationEnabled": {
                        "type": "boolean"
                      },
                      "recentRecordedAccess": {
                        "type": "string",
                        "format": "date"
                      },
                      "sessionDefinition": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "numPeriods": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "granularity": {
                              "type": "string",
                              "enum": [
                                "MINUTE",
                                "HOUR",
                                "DAY",
                                "WEEK"
                              ]
                            },
                            "func": {
                              "type": "string",
                              "enum": [
                                "INACTIVITY",
                                "BEFORE_EVENTS"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "curatedComponents": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "object",
                          "properties": {
                            "componentId": {
                              "type": "string"
                            },
                            "componentType": {
                              "type": "string"
                            },
                            "componentName": {
                              "type": "string"
                            },
                            "componentDescription": {
                              "type": "string"
                            },
                            "defaultAllocationModel": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string",
                                  "enum": [
                                    "ALLOCATION_FIRST_TOUCH",
                                    "ALLOCATION_FIRST_TOUCH_DIM",
                                    "ALLOCATION_LAST_TOUCH",
                                    "ALLOCATION_LAST_TOUCH_DIM",
                                    "ALLOCATION_INSTANCE",
                                    "ALLOCATION_DEDUPED_INSTANCE",
                                    "ALLOCATION_LAST_KNOWN",
                                    "ALLOCATION_LEGACY",
                                    "ALLOCATION_LINEAR",
                                    "ALLOCATION_PARTICIPATION",
                                    "ALLOCATION_PARTICIPATION_DIM",
                                    "ALLOCATION_POSITION_BASED",
                                    "ALLOCATION_TIME_DECAY",
                                    "ALLOCATION_U_SHAPED",
                                    "ALLOCATION_J_SHAPED",
                                    "ALLOCATION_REVERSE_J_SHAPED",
                                    "ALLOCATION_DEDUPED_LINEAR",
                                    "ALLOCATION_ALGORITHMIC"
                                  ]
                                },
                                "expiration": {
                                  "type": "object",
                                  "properties": {
                                    "func": {
                                      "type": "string",
                                      "enum": [
                                        "afterEvents",
                                        "beforeEvents",
                                        "inactivity",
                                        "container"
                                      ]
                                    },
                                    "events": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "granularity": {
                                      "type": "string"
                                    },
                                    "numPeriods": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "context": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "lookbackExpiration": {
                                  "type": "object",
                                  "properties": {
                                    "func": {
                                      "type": "string"
                                    },
                                    "granularity": {
                                      "type": "string"
                                    },
                                    "numPeriods": {
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "merchandising": {
                                  "type": "object",
                                  "properties": {
                                    "func": {
                                      "type": "string",
                                      "enum": [
                                        "nonMerchandising",
                                        "forced",
                                        "auto"
                                      ]
                                    },
                                    "bindingCriteria": {
                                      "type": "object",
                                      "properties": {
                                        "func": {
                                          "type": "string",
                                          "enum": [
                                            "always",
                                            "events"
                                          ]
                                        },
                                        "bindingEvents": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "context": {
                                  "type": "string"
                                },
                                "firstWeight": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "middleWeight": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "lastWeight": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "halfLifeNumPeriods": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "halfLifeGranularity": {
                                  "type": "string"
                                }
                              }
                            },
                            "lookback": {
                              "type": "object",
                              "properties": {
                                "func": {
                                  "type": "string"
                                },
                                "granularity": {
                                  "type": "string"
                                },
                                "numPeriods": {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            }
                          }
                        }
                      },
                      "externalData": {
                        "type": "object",
                        "properties": {
                          "externalId": {
                            "type": "string"
                          },
                          "externalParentId": {
                            "type": "string"
                          }
                        }
                      },
                      "containerNames": {
                        "type": "object",
                        "properties": {
                          "event": {
                            "type": "string"
                          },
                          "session": {
                            "type": "string"
                          },
                          "people": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "pageable": {
                  "type": "object",
                  "properties": {
                    "sort": {
                      "type": "object",
                      "properties": {
                        "sorted": {
                          "type": "boolean"
                        },
                        "unsorted": {
                          "type": "boolean"
                        },
                        "empty": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paged": {
                      "type": "boolean"
                    },
                    "unpaged": {
                      "type": "boolean"
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "offset": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                },
                "totalElements": {
                  "type": "integer",
                  "format": "int64"
                },
                "totalPages": {
                  "type": "integer",
                  "format": "int32"
                },
                "last": {
                  "type": "boolean"
                },
                "sort": {
                  "type": "object",
                  "properties": {
                    "sorted": {
                      "type": "boolean"
                    },
                    "unsorted": {
                      "type": "boolean"
                    },
                    "empty": {
                      "type": "boolean"
                    }
                  }
                },
                "first": {
                  "type": "boolean"
                },
                "numberOfElements": {
                  "type": "integer",
                  "format": "int32"
                },
                "size": {
                  "type": "integer",
                  "format": "int32"
                },
                "number": {
                  "type": "integer",
                  "format": "int32"
                },
                "empty": {
                  "type": "boolean"
                }
              },
              "description": "List of Data Views"
            }
          },
          "404": {
            "description": "Could not find dataViews for company with given parameters",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while retrieving Data Views list",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dataviews API"
        ],
        "summary": "Creation of Data Views",
        "description": "Stores the given Data View in the db.",
        "operationId": "createDataView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted object representing a Data View",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "parentDataGroupId": {
                  "type": "string"
                },
                "segmentList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "currentTimezoneOffset": {
                  "type": "number",
                  "format": "float"
                },
                "timezoneDesignator": {
                  "type": "string"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "organization": {
                  "type": "string"
                },
                "modifiedBy": {
                  "type": "string"
                },
                "curationEnabled": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date"
                },
                "sessionDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "numPeriods": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "granularity": {
                        "type": "string",
                        "enum": [
                          "MINUTE",
                          "HOUR",
                          "DAY",
                          "WEEK"
                        ]
                      },
                      "func": {
                        "type": "string",
                        "enum": [
                          "INACTIVITY",
                          "BEFORE_EVENTS"
                        ]
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "curatedComponents": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "componentId": {
                        "type": "string"
                      },
                      "componentType": {
                        "type": "string"
                      },
                      "componentName": {
                        "type": "string"
                      },
                      "componentDescription": {
                        "type": "string"
                      },
                      "defaultAllocationModel": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          },
                          "expiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "beforeEvents",
                                  "inactivity",
                                  "container"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "context": {
                                "type": "string"
                              }
                            }
                          },
                          "lookbackExpiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "merchandising": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "nonMerchandising",
                                  "forced",
                                  "auto"
                                ]
                              },
                              "bindingCriteria": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "events"
                                    ]
                                  },
                                  "bindingEvents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "context": {
                            "type": "string"
                          },
                          "firstWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "middleWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "lastWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeNumPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeGranularity": {
                            "type": "string"
                          }
                        }
                      },
                      "lookback": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string"
                          },
                          "granularity": {
                            "type": "string"
                          },
                          "numPeriods": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "externalData": {
                  "type": "object",
                  "properties": {
                    "externalId": {
                      "type": "string"
                    },
                    "externalParentId": {
                      "type": "string"
                    }
                  }
                },
                "containerNames": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    },
                    "people": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "description",
                "owner",
                "isDeleted",
                "parentDataGroupId",
                "segmentList",
                "currentTimezoneOffset",
                "timezoneDesignator",
                "modified",
                "createdDate",
                "organization",
                "curationEnabled",
                "recentRecordedAccess",
                "sessionDefinition",
                "curatedComponents",
                "externalData",
                "containerNames"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "parentDataGroupId": {
                  "type": "string"
                },
                "segmentList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "currentTimezoneOffset": {
                  "type": "number",
                  "format": "float"
                },
                "timezoneDesignator": {
                  "type": "string"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "organization": {
                  "type": "string"
                },
                "modifiedBy": {
                  "type": "string"
                },
                "curationEnabled": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date"
                },
                "sessionDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "numPeriods": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "granularity": {
                        "type": "string",
                        "enum": [
                          "MINUTE",
                          "HOUR",
                          "DAY",
                          "WEEK"
                        ]
                      },
                      "func": {
                        "type": "string",
                        "enum": [
                          "INACTIVITY",
                          "BEFORE_EVENTS"
                        ]
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "curatedComponents": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "componentId": {
                        "type": "string"
                      },
                      "componentType": {
                        "type": "string"
                      },
                      "componentName": {
                        "type": "string"
                      },
                      "componentDescription": {
                        "type": "string"
                      },
                      "defaultAllocationModel": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          },
                          "expiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "beforeEvents",
                                  "inactivity",
                                  "container"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "context": {
                                "type": "string"
                              }
                            }
                          },
                          "lookbackExpiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "merchandising": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "nonMerchandising",
                                  "forced",
                                  "auto"
                                ]
                              },
                              "bindingCriteria": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "events"
                                    ]
                                  },
                                  "bindingEvents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "context": {
                            "type": "string"
                          },
                          "firstWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "middleWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "lastWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeNumPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeGranularity": {
                            "type": "string"
                          }
                        }
                      },
                      "lookback": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string"
                          },
                          "granularity": {
                            "type": "string"
                          },
                          "numPeriods": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "externalData": {
                  "type": "object",
                  "properties": {
                    "externalId": {
                      "type": "string"
                    },
                    "externalParentId": {
                      "type": "string"
                    }
                  }
                },
                "containerNames": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    },
                    "people": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Data View body is invalid",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Unable to find parentDataGroup",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Unable to communicate with database",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/datagroups/dataviews/{dataViewId}": {
      "get": {
        "tags": [
          "Dataviews API"
        ],
        "summary": "Retrieval of a Data View by dataViewId",
        "description": "Used to retrieve a Data View by id",
        "operationId": "getDataViewById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataViewId",
            "in": "path",
            "description": "The Data View id to lookup",
            "required": true,
            "type": "string"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "description",
                "owner",
                "isDeleted",
                "parentDataGroupId",
                "segmentList",
                "currentTimezoneOffset",
                "timezoneDesignator",
                "modified",
                "createdDate",
                "organization",
                "curationEnabled",
                "recentRecordedAccess",
                "sessionDefinition",
                "curatedComponents",
                "externalData",
                "containerNames"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "parentDataGroupId": {
                  "type": "string"
                },
                "segmentList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "currentTimezoneOffset": {
                  "type": "number",
                  "format": "float"
                },
                "timezoneDesignator": {
                  "type": "string"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "organization": {
                  "type": "string"
                },
                "modifiedBy": {
                  "type": "string"
                },
                "curationEnabled": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date"
                },
                "sessionDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "numPeriods": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "granularity": {
                        "type": "string",
                        "enum": [
                          "MINUTE",
                          "HOUR",
                          "DAY",
                          "WEEK"
                        ]
                      },
                      "func": {
                        "type": "string",
                        "enum": [
                          "INACTIVITY",
                          "BEFORE_EVENTS"
                        ]
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "curatedComponents": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "componentId": {
                        "type": "string"
                      },
                      "componentType": {
                        "type": "string"
                      },
                      "componentName": {
                        "type": "string"
                      },
                      "componentDescription": {
                        "type": "string"
                      },
                      "defaultAllocationModel": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          },
                          "expiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "beforeEvents",
                                  "inactivity",
                                  "container"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "context": {
                                "type": "string"
                              }
                            }
                          },
                          "lookbackExpiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "merchandising": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "nonMerchandising",
                                  "forced",
                                  "auto"
                                ]
                              },
                              "bindingCriteria": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "events"
                                    ]
                                  },
                                  "bindingEvents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "context": {
                            "type": "string"
                          },
                          "firstWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "middleWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "lastWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeNumPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeGranularity": {
                            "type": "string"
                          }
                        }
                      },
                      "lookback": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string"
                          },
                          "granularity": {
                            "type": "string"
                          },
                          "numPeriods": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "externalData": {
                  "type": "object",
                  "properties": {
                    "externalId": {
                      "type": "string"
                    },
                    "externalParentId": {
                      "type": "string"
                    }
                  }
                },
                "containerNames": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    },
                    "people": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Unable to find Data View ID",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while retrieving Data View",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dataviews API"
        ],
        "summary": "Modification of a Data View by dataViewId",
        "description": "Used to update a Data View by id with the given Data View data",
        "operationId": "updateDataViewById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataViewId",
            "in": "path",
            "description": "The Data View id to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted object representing a Data View",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "parentDataGroupId": {
                  "type": "string"
                },
                "segmentList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "currentTimezoneOffset": {
                  "type": "number",
                  "format": "float"
                },
                "timezoneDesignator": {
                  "type": "string"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "organization": {
                  "type": "string"
                },
                "modifiedBy": {
                  "type": "string"
                },
                "curationEnabled": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date"
                },
                "sessionDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "numPeriods": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "granularity": {
                        "type": "string",
                        "enum": [
                          "MINUTE",
                          "HOUR",
                          "DAY",
                          "WEEK"
                        ]
                      },
                      "func": {
                        "type": "string",
                        "enum": [
                          "INACTIVITY",
                          "BEFORE_EVENTS"
                        ]
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "curatedComponents": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "componentId": {
                        "type": "string"
                      },
                      "componentType": {
                        "type": "string"
                      },
                      "componentName": {
                        "type": "string"
                      },
                      "componentDescription": {
                        "type": "string"
                      },
                      "defaultAllocationModel": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          },
                          "expiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "beforeEvents",
                                  "inactivity",
                                  "container"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "context": {
                                "type": "string"
                              }
                            }
                          },
                          "lookbackExpiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "merchandising": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "nonMerchandising",
                                  "forced",
                                  "auto"
                                ]
                              },
                              "bindingCriteria": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "events"
                                    ]
                                  },
                                  "bindingEvents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "context": {
                            "type": "string"
                          },
                          "firstWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "middleWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "lastWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeNumPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeGranularity": {
                            "type": "string"
                          }
                        }
                      },
                      "lookback": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string"
                          },
                          "granularity": {
                            "type": "string"
                          },
                          "numPeriods": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "externalData": {
                  "type": "object",
                  "properties": {
                    "externalId": {
                      "type": "string"
                    },
                    "externalParentId": {
                      "type": "string"
                    }
                  }
                },
                "containerNames": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    },
                    "people": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "description",
                "owner",
                "isDeleted",
                "parentDataGroupId",
                "segmentList",
                "currentTimezoneOffset",
                "timezoneDesignator",
                "modified",
                "createdDate",
                "organization",
                "curationEnabled",
                "recentRecordedAccess",
                "sessionDefinition",
                "curatedComponents",
                "externalData",
                "containerNames"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "parentDataGroupId": {
                  "type": "string"
                },
                "segmentList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "currentTimezoneOffset": {
                  "type": "number",
                  "format": "float"
                },
                "timezoneDesignator": {
                  "type": "string"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "organization": {
                  "type": "string"
                },
                "modifiedBy": {
                  "type": "string"
                },
                "curationEnabled": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date"
                },
                "sessionDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "numPeriods": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "granularity": {
                        "type": "string",
                        "enum": [
                          "MINUTE",
                          "HOUR",
                          "DAY",
                          "WEEK"
                        ]
                      },
                      "func": {
                        "type": "string",
                        "enum": [
                          "INACTIVITY",
                          "BEFORE_EVENTS"
                        ]
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "curatedComponents": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "componentId": {
                        "type": "string"
                      },
                      "componentType": {
                        "type": "string"
                      },
                      "componentName": {
                        "type": "string"
                      },
                      "componentDescription": {
                        "type": "string"
                      },
                      "defaultAllocationModel": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          },
                          "expiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "beforeEvents",
                                  "inactivity",
                                  "container"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "context": {
                                "type": "string"
                              }
                            }
                          },
                          "lookbackExpiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "merchandising": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "nonMerchandising",
                                  "forced",
                                  "auto"
                                ]
                              },
                              "bindingCriteria": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "events"
                                    ]
                                  },
                                  "bindingEvents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "context": {
                            "type": "string"
                          },
                          "firstWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "middleWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "lastWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeNumPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeGranularity": {
                            "type": "string"
                          }
                        }
                      },
                      "lookback": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string"
                          },
                          "granularity": {
                            "type": "string"
                          },
                          "numPeriods": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "externalData": {
                  "type": "object",
                  "properties": {
                    "externalId": {
                      "type": "string"
                    },
                    "externalParentId": {
                      "type": "string"
                    }
                  }
                },
                "containerNames": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    },
                    "people": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Data View with given dataViewId",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while updating the Data View",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dataviews API"
        ],
        "summary": "Deletion of a Data View by dataViewId",
        "description": "Used to remove a Data View by id",
        "operationId": "removeDataViewById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataViewId",
            "in": "path",
            "description": "The Data View id to remove",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Data View with given dataViewId",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error while removing the Data View",
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "enum": [
                    "invalid_metric_access",
                    "method_not_allowed",
                    "resource_conflict",
                    "invalid_access",
                    "resource_temporarily_unavailable",
                    "external_api_failure",
                    "aam_failure",
                    "resource_already_exists",
                    "invalid_state",
                    "invalid_json_input",
                    "invalid_parameters",
                    "invalid_dimension_access",
                    "unsupported_data_type",
                    "resource_not_found",
                    "insufficient_access",
                    "health_check_error",
                    "invalid_data",
                    "unexpected_error",
                    "external_api_error",
                    "unsupported_resource",
                    "io_error",
                    "action_not_implemented",
                    "too_many_requests",
                    "payload_too_large",
                    "invalid_request",
                    "invalid_client_id",
                    "unauthorized",
                    "authorization_error",
                    "invalid_token",
                    "insufficient_scope",
                    "bluecoat_unauthorized"
                  ]
                },
                "errorDescription": {
                  "type": "string"
                },
                "errorId": {
                  "type": "string"
                },
                "errorDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "rootCauseService": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/datagroups/dataviews/validate": {
      "post": {
        "tags": [
          "Dataviews API"
        ],
        "summary": "Validates a data view",
        "description": "Validates a Data View.",
        "operationId": "validate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted Object containing key/value pairs for virtual report suite creation.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "parentDataGroupId": {
                  "type": "string"
                },
                "segmentList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "currentTimezoneOffset": {
                  "type": "number",
                  "format": "float"
                },
                "timezoneDesignator": {
                  "type": "string"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "organization": {
                  "type": "string"
                },
                "modifiedBy": {
                  "type": "string"
                },
                "curationEnabled": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date"
                },
                "sessionDefinition": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "numPeriods": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "granularity": {
                        "type": "string",
                        "enum": [
                          "MINUTE",
                          "HOUR",
                          "DAY",
                          "WEEK"
                        ]
                      },
                      "func": {
                        "type": "string",
                        "enum": [
                          "INACTIVITY",
                          "BEFORE_EVENTS"
                        ]
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "curatedComponents": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "componentId": {
                        "type": "string"
                      },
                      "componentType": {
                        "type": "string"
                      },
                      "componentName": {
                        "type": "string"
                      },
                      "componentDescription": {
                        "type": "string"
                      },
                      "defaultAllocationModel": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string",
                            "enum": [
                              "ALLOCATION_FIRST_TOUCH",
                              "ALLOCATION_FIRST_TOUCH_DIM",
                              "ALLOCATION_LAST_TOUCH",
                              "ALLOCATION_LAST_TOUCH_DIM",
                              "ALLOCATION_INSTANCE",
                              "ALLOCATION_DEDUPED_INSTANCE",
                              "ALLOCATION_LAST_KNOWN",
                              "ALLOCATION_LEGACY",
                              "ALLOCATION_LINEAR",
                              "ALLOCATION_PARTICIPATION",
                              "ALLOCATION_PARTICIPATION_DIM",
                              "ALLOCATION_POSITION_BASED",
                              "ALLOCATION_TIME_DECAY",
                              "ALLOCATION_U_SHAPED",
                              "ALLOCATION_J_SHAPED",
                              "ALLOCATION_REVERSE_J_SHAPED",
                              "ALLOCATION_DEDUPED_LINEAR",
                              "ALLOCATION_ALGORITHMIC"
                            ]
                          },
                          "expiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "afterEvents",
                                  "beforeEvents",
                                  "inactivity",
                                  "container"
                                ]
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "context": {
                                "type": "string"
                              }
                            }
                          },
                          "lookbackExpiration": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string"
                              },
                              "granularity": {
                                "type": "string"
                              },
                              "numPeriods": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "merchandising": {
                            "type": "object",
                            "properties": {
                              "func": {
                                "type": "string",
                                "enum": [
                                  "nonMerchandising",
                                  "forced",
                                  "auto"
                                ]
                              },
                              "bindingCriteria": {
                                "type": "object",
                                "properties": {
                                  "func": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "events"
                                    ]
                                  },
                                  "bindingEvents": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "context": {
                            "type": "string"
                          },
                          "firstWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "middleWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "lastWeight": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeNumPeriods": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "halfLifeGranularity": {
                            "type": "string"
                          }
                        }
                      },
                      "lookback": {
                        "type": "object",
                        "properties": {
                          "func": {
                            "type": "string"
                          },
                          "granularity": {
                            "type": "string"
                          },
                          "numPeriods": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "externalData": {
                  "type": "object",
                  "properties": {
                    "externalId": {
                      "type": "string"
                    },
                    "externalParentId": {
                      "type": "string"
                    }
                  }
                },
                "containerNames": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "session": {
                      "type": "string"
                    },
                    "people": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "valid": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "validator_version": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/filters": {
      "get": {
        "tags": [
          "Filters API"
        ],
        "summary": "Retrieves paginated segments",
        "description": "A segment response will always include these default items:<br><b>id</b><br><br>Other attributes can be optionally requested through the 'expansion' field: <br><b>name</b>: Name of the segment<br><b>description</b>: Description of the segment<br><b>dataId</b>: Associated Data ID of the segment<br><b>owner</b>: Owner of the segment<br><b>modified</b>: Date that the segment was last modified (ISO 8601)<br><b>definition</b>: Segment definition as JSON object<br><b>compatibility</b>: Products that the segment is compatible with<br><b>isDeleted</b>: Returns whether or not the segment is 'Deleted' (note that deleted segments are only returned if requested by ID)",
        "operationId": "findAll_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional segment metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "compatibility",
                "definition",
                "internal",
                "modified",
                "isDeleted",
                "definitionLastModified",
                "createdDate",
                "recentRecordedAccess",
                "performanceScore",
                "owner",
                "dataId",
                "ownerFullName",
                "dataName",
                "sharesFullName",
                "approved",
                "favorite",
                "shares",
                "tags",
                "usageSummary",
                "usageSummaryWithRelevancyScore"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "includeType",
            "in": "query",
            "description": "Include additional segments not owned by user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "shared",
                "templates",
                "deleted",
                "internal"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "dataIds",
            "in": "query",
            "description": "Filter list to only include segments tied to the specified data group ID list (comma-delimited)",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Filter list to only include segments owned by the specified imsUserId",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterByIds",
            "in": "query",
            "description": "Filter list to only include segments in the specified list (comma-delimited list of IDs). This has filtered Ids from tags, approved, favorites and user specified Ids list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "toBeUsedInRsid",
            "in": "query",
            "description": "The report suite where the segment is intended to be used.  This report suite will be used to determine things like compatibility and permissions.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter list to only include segments that contains the Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterByModifiedAfter",
            "in": "query",
            "description": "Filter list to only include segments modified since this date (ISO8601 format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "cached",
            "in": "query",
            "description": "return cached results",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Return paginated results",
            "required": false,
            "type": "string",
            "default": "true",
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (base 0 - first page is \"0\")",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC or DESC",
            "required": false,
            "type": "int",
            "default": "ASC"
          },
          {
            "name": "sortProperty",
            "in": "query",
            "description": "Property to sort by (name, modified_date, performanceScore, id is currently allowed)",
            "required": false,
            "type": "string",
            "default": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Unable to retrieve list of segments shared with user"
          },
          "401": {
            "description": "Owner filter error; user specified is not in the same organization as the requesting user"
          },
          "403": {
            "description": "Requesting non-shared segments for other users is restricted to admin users"
          },
          "500": {
            "description": "External API error; Segment retrieval failed"
          }
        }
      }
    },
    "/filters/validate": {
      "post": {
        "tags": [
          "Filters API"
        ],
        "summary": "Validate a Segment",
        "description": "Returns a segment validation for the segment contained in the post body of the report.",
        "operationId": "segments_validateSegment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Segment definition",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "valid": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "validator_version": {
                  "type": "string"
                },
                "supported_products": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "supported_schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "supported_features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad JSON input; request not formatted correctly"
          },
          "500": {
            "description": "Unexpected error;"
          }
        }
      }
    },
    "/filters/{id}": {
      "get": {
        "tags": [
          "Filters API"
        ],
        "summary": "Retrieves a single segment by ID",
        "description": "A segment response will always include these default items:<br><b>id</b><br><br>Other attributes can be optionally requested through the 'expansion' field: <br><b>name</b>: Name of the segment<br><b>description</b>: Description of the segment<br><b>dataId</b>: Associated Data ID of the segment<br><b>owner</b>: Owner of the segment<br><b>modified</b>: Date that the segment was last modified (ISO 8601)<br><b>definition</b>: Segment definition as JSON object<br><b>compatibility</b>: Products that the segment is compatible with<br><b>isDeleted</b>: Returns whether or not the segment is 'Deleted' (note that deleted segments are only returned if requested by ID)",
        "operationId": "findOne_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The segment ID to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "toBeUsedInRsid",
            "in": "query",
            "description": "The report suite where the segment is intended to be used.  This report suite will be used to determine things like compatibility and permissions.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional segment metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "compatibility",
                "definition",
                "internal",
                "modified",
                "isDeleted",
                "definitionLastModified",
                "createdDate",
                "recentRecordedAccess",
                "performanceScore",
                "owner",
                "dataId",
                "ownerFullName",
                "dataName",
                "sharesFullName",
                "approved",
                "favorite",
                "shares",
                "tags",
                "usageSummary",
                "usageSummaryWithRelevancyScore"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                },
                "report_suite": {
                  "type": "string"
                },
                "modifiedById": {
                  "type": "string"
                },
                "definition": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "compatibility": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "createDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdBy": {
                  "type": "string"
                },
                "disabled": {
                  "type": "boolean"
                },
                "internal": {
                  "type": "boolean"
                },
                "organization": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date-time"
                },
                "performanceScore": {
                  "type": "string"
                },
                "performanceScoreWeightVersion": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "definitionLastModified": {
                  "type": "string",
                  "format": "date-time"
                },
                "dataId": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "dataName": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Requesting non-shared segments for other users is restricted to admin users"
          },
          "500": {
            "description": "External API error; segment retrieval failed"
          }
        }
      },
      "put": {
        "tags": [
          "Filters API"
        ],
        "summary": "Make changes or updates to an existing segment",
        "description": "The following fields can be modified through this endpoint: <br><b>name, description, definition, owner, rsid, aamStatus</b><br><br>Note: \"aamStatus\" is used to \"publish\" a report suite segment to other products in the Experience Cloud. Description is always required when publishing with aamStatus. The report suite must already be pre-configured for AAM for publishing to succeed (see the \"/segments/aamStatus/\" endpoint for more information). <br>Format for aamStatus object:<br>\"aamStatus\":{\"published\":[\"rsid1\",\"rsid2\"]}<br><br>Example \"defintion\" for use in testing API below (\"Page exists\"):<br>\"definition\":{\"func\":\"segment\",\"container\":{\"func\":\"container\",\"context\":\"hits\",\"pred\":{\"func\":\"exists\",\"description\":\"Page\",\"val\":{\"func\":\"attr\",\"name\":\"variables/page\"}}},\"version\":[1,0,0]}<br><br>Response will be the newly modified segment object after the update request completes.<br><br><b><span style=\"text-decoration: underline;\">SegmentResponse</span></b><br>A segment response will always include these default items:<br><b>id</b><br><br>Other attributes can be optionally requested through the 'expansion' field: <br><b>name</b>: Name of the segment<br><b>description</b>: Description of the segment<br><b>dataId</b>: Associated Data ID of the segment<br><b>owner</b>: Owner of the segment<br><b>modified</b>: Date that the segment was last modified (ISO 8601)<br><b>definition</b>: Segment definition as JSON object<br><b>compatibility</b>: Products that the segment is compatible with<br><b>isDeleted</b>: Returns whether or not the segment is 'Deleted' (note that deleted segments are only returned if requested by ID)",
        "operationId": "updateSegment_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional segment metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "compatibility",
                "definition",
                "internal",
                "modified",
                "isDeleted",
                "definitionLastModified",
                "createdDate",
                "recentRecordedAccess",
                "performanceScore",
                "owner",
                "dataId",
                "ownerFullName",
                "dataName",
                "sharesFullName"
              ]
            },
            "collectionFormat": "csv"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Segment ID to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON-formatted Object containing key/value pairs to be updated.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                },
                "report_suite": {
                  "type": "string"
                },
                "modifiedById": {
                  "type": "string"
                },
                "definition": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "compatibility": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "createDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdBy": {
                  "type": "string"
                },
                "disabled": {
                  "type": "boolean"
                },
                "internal": {
                  "type": "boolean"
                },
                "organization": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date-time"
                },
                "performanceScore": {
                  "type": "string"
                },
                "performanceScoreWeightVersion": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "definitionLastModified": {
                  "type": "string",
                  "format": "date-time"
                },
                "dataId": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "dataName": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "type": "string",
            "default": "en_US"
          },
          {
            "name": "cached",
            "in": "query",
            "description": "Use cached results",
            "required": false,
            "type": "boolean",
            "default": true,
            "enum": [
              "true",
              "false"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                },
                "report_suite": {
                  "type": "string"
                },
                "modifiedById": {
                  "type": "string"
                },
                "definition": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "compatibility": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "createDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdBy": {
                  "type": "string"
                },
                "disabled": {
                  "type": "boolean"
                },
                "internal": {
                  "type": "boolean"
                },
                "organization": {
                  "type": "string"
                },
                "template": {
                  "type": "boolean"
                },
                "recentRecordedAccess": {
                  "type": "string",
                  "format": "date-time"
                },
                "performanceScore": {
                  "type": "string"
                },
                "performanceScoreWeightVersion": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "definitionLastModified": {
                  "type": "string",
                  "format": "date-time"
                },
                "dataId": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "imsUserId": {
                      "type": "string",
                      "description": "the ims org id of the owner, included when the expansion parameter owner is true"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "dataName": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "shares": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "approved": {
                  "type": "boolean"
                },
                "favorite": {
                  "type": "boolean"
                },
                "usageSummary": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Definition must be formatted as a JSON Object"
          },
          "401": {
            "description": "Company mismatch; segment ownership can only be transferred within the same organization"
          },
          "403": {
            "description": "User does not have permission to update this segment"
          },
          "500": {
            "description": "External API error; Segment update or retrieval failed"
          }
        }
      },
      "delete": {
        "tags": [
          "Filters API"
        ],
        "summary": "Deletion of a Segment by Id",
        "description": "",
        "operationId": "deleteSegment_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of segment to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Segment delete failed"
          }
        }
      }
    }
  }
}
