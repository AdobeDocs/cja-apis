"use strict";(self.webpackChunkcja_apis=self.webpackChunkcja_apis||[]).push([[1580],{30325:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return l},default:function(){return h}});var a,r=t(87462),s=t(63366),o=(t(15007),t(64983)),i=t(91515),d=["components"],l={},p=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),m={_frontmatter:l},u=i.Z;function h(e){var n=e.components,t=(0,s.Z)(e,d);return(0,o.mdx)(u,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"media-edge-api-trouble-shooting-guide"},"Media Edge API trouble-shooting guide"),(0,o.mdx)("p",null,"This guide provides trouble-shooting instructions for handling errors and for obtaining successful responses."),(0,o.mdx)("h2",{id:"using-error-response-aids"},"Using error response aids"),(0,o.mdx)("p",null,"To help troubleshoot unsuccessful responses, errors are accompanied by a response body containing an error object. In this case, the response body contains problem details, as defined by ",(0,o.mdx)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc7807"},"RFC 7807 Problem Details for HTTP APIs"),". To improve the API user experience, the problem details are descriptive (the details of the array keys are displayed using JsonPath to the missing or invalid field). They are also cumulative (all invalid fields will be reported in the same request)."),(0,o.mdx)("h2",{id:"validating-session-starts"},"Validating session starts"),(0,o.mdx)("p",null,"Most problems with Session start requests result in a 207 Multi-Status response.\nThe payload is similar to a ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/experience-platform/edge-network-server-api/error-handling.html"},"Server API")," non-fatal error. All\nMedia Analytics errors have the following type:  ",(0,o.mdx)("inlineCode",{parentName:"p"},"https://ns.adobe.com/aep/errors/va-edge-0XXX-XXX"),". The numbers displayed in the response correspond to the error status."),(0,o.mdx)("p",null,"The following example shows a response body for a Session start request that both lacks a mandatory field and has an invalid one."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "requestId": "d4be4f91-a535-41e7-80c6-bdd031d3a365",\n    "handle": [\n        ...\n    ],\n    "errors": [\n        {\n            "type": "https://ns.adobe.com/aep/errors/va-edge-0400-400",\n            "status": 400,\n            "title": "Invalid request",\n            "report": {\n                "eventIndex": 0,\n                "details": [\n                    {\n                        "name": "$.xdm.mediaCollection.sessionDetails.name",\n                        "reason": "Missing required field"\n                    },\n                    {\n                        "name": "$.xdm.timestamp",\n                        "reason": "Field should respect ISO 8601 standard for presenting date and time with offset to UTC (e.g. 2022-05-19T19:31:02Z, 2022-05-19T21:31:02+02:00, 2022-05-19T21:31:02.234+02:00)"\n                    }\n                ]\n            }\n        }\n    ]\n}\n')),(0,o.mdx)("p",null,"In the example above, both problems are noted by ",(0,o.mdx)("inlineCode",{parentName:"p"},"name")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"reason")," under ",(0,o.mdx)("inlineCode",{parentName:"p"},"details"),": the first reason displays ",(0,o.mdx)("inlineCode",{parentName:"p"},"missing required field")," and the second describes non-compliance to the ISO 8601 standard. "),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},"[!NOTE]"),(0,o.mdx)("p",{parentName:"blockquote"},"For errors that are caused upstream from Media Analytics, Adobe recommends that you continue to  process the generated media session.")),(0,o.mdx)("h2",{id:"validating-events"},"Validating events"),(0,o.mdx)("p",null,"Most invalid event requests result in a 400 Bad Request response. In these cases, the payload is similar to Server API fatal errors. "),(0,o.mdx)("p",null,"For event requests, the Media Edge API service includes additional checks that are not captured in the XDM model itself. This includes a check that the path ",(0,o.mdx)("inlineCode",{parentName:"p"},"eventType")," matches the request payload ",(0,o.mdx)("inlineCode",{parentName:"p"},"eventType"),"."),(0,o.mdx)("p",null,"The following example shows an ",(0,o.mdx)("inlineCode",{parentName:"p"},"eventType")," mismatch with an ",(0,o.mdx)("inlineCode",{parentName:"p"},"adBreakStart")," payload sent to ",(0,o.mdx)("inlineCode",{parentName:"p"},"ee/va/v1/chapterStart"),":"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "https://ns.adobe.com/aep/errors/va-edge-0400-400",\n    "status": 400,\n    "title": "Bad Request",\n    "detail": "Invalid request. Please check your input and try again.",\n    "report": {\n        "details": "The payload eventType adBreakStart was different from the path eventType chapterStart"\n    }\n}\n')),(0,o.mdx)("p",null,"The following example shows an additonal Media Edge API check finding a ",(0,o.mdx)("inlineCode",{parentName:"p"},"chapterStart")," call missing ",(0,o.mdx)("inlineCode",{parentName:"p"},"chapterDetails")," info:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "https://ns.adobe.com/aep/errors/va-edge-0400-400",\n    "status": 400,\n    "title": "Bad Request",\n    "detail": "Invalid request. Please check your input and try again.",\n    "report": {\n        "details": [\n            {\n                "name": "$.events[0].xdm.mediaCollection.chapterDetails",\n                "reason": "Missing required field"\n            }\n        ]\n    }\n}\n')),(0,o.mdx)("h2",{id:"handling-400-level-and-500-level-errors"},"Handling 400-level and 500-level errors"),(0,o.mdx)("p",null,"The following table provides instruction for handling status response errors:"),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Error Code"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"4xx Bad request"),(0,o.mdx)("td",{parentName:"tr",align:null},"Most 4xx errors (e.g. ",(0,o.mdx)("inlineCode",{parentName:"td"},"400"),", ",(0,o.mdx)("inlineCode",{parentName:"td"},"403"),", ",(0,o.mdx)("inlineCode",{parentName:"td"},"404"),") should not be retried by the user. Retrying the request will not result in a succesful response. The user should address the error before retrying the request. Events resulting in 4xx status codes are not tracked, which could potentially affect the accuracy of data in sessions that received 4xx responses.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"410 Gone"),(0,o.mdx)("td",{parentName:"tr",align:null},"Indicates that the session intended for tracking is no longer being computed on the server-side. The most common reason for this is that the session is longer than 24 hours. After receiving a ",(0,o.mdx)("inlineCode",{parentName:"td"},"410"),", try to start a new session and track it.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"429 Too many requests"),(0,o.mdx)("td",{parentName:"tr",align:null},"This response code indicates that the server is rate limiting the requests. Follow the ",(0,o.mdx)("strong",{parentName:"td"},"Retry-After")," instructions in the response header carefully. Any responses flowing back must carry the HTTP response code with a domain specific error code.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"500 Internal server error"),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"500")," errors are generic, catch-all errors. ",(0,o.mdx)("inlineCode",{parentName:"td"},"500")," errors should not be retried, except for ",(0,o.mdx)("inlineCode",{parentName:"td"},"502"),", ",(0,o.mdx)("inlineCode",{parentName:"td"},"503")," and ",(0,o.mdx)("inlineCode",{parentName:"td"},"504"),".")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"502 Bad gateway"),(0,o.mdx)("td",{parentName:"tr",align:null},"This error code Indicates that the server, while acting as a gateway, received an invalid response from upstream servers. This can happen due to network issues between servers. The temporary network issue can resolve itself, so retrying the request may resolve the issue.")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},"503 Service unavailable"),(0,o.mdx)("td",{parentName:"tr",align:null},"This error code indicates that the service is temporarily unavailable. This can happen during maintenance periods. Recipients of ",(0,o.mdx)("inlineCode",{parentName:"td"},"503")," errors can retry the request, but should also follow the ",(0,o.mdx)("strong",{parentName:"td"},"Retry-After")," header instructions.")))),(0,o.mdx)("h2",{id:"queueing-events-when-session-responses-are-slow"},"Queueing events when session responses are slow"),(0,o.mdx)("p",null,"After starting a media tracking session, the media player may fire before the Session Start response returns (with the Session ID parameter) from the backend. If this occurs, your app must queue any tracking events that arrive between the Session start request and its response. When the Sessions response arrives, you should first process any queued events, then you can start processing live events."),(0,o.mdx)("p",null,"For best results, check the Reference Player in your distribution for instructions on how to process events prior to receiving a Session ID. "),(0,o.mdx)("p",null,"The following example shows a method for processing events prior to receiving a Session ID:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'// For event payload format, see "Request body" sections of "Session start request", "Event requests" respectively.  *\n \nVideoPlayer.prototype._collectEvent = function(event) {\n    var sessionID = event.events[0].xdm.mediaCollection.sessionID\n    var eventType = event.events[0].xdm.eventType.substring("media.".length);\n    // If we don\'t have a Session ID yet,\n    // queue the event and return...\n    if (sessionId === undefined) {\n        console.log("[Player] Queueing event")\n        _pendingEvents.push(event)\n        return;\n    }\n \n    // If we DO have a Session ID, process the\n    // tracking event...\n    apiClient.request({\n        "baseUrl": `${endpoint}`,\n        "path": `ee/va/v1/${eventType}`,\n        "method": `POST`,\n        "data": `${event}`\n    }).then((response) => {\n        if (eventType === "sessionStart") {\n            var newSessionID = response.json().handle.filter((h) => h.type === "media-analytics:new-session")[0].payload[0].sessionId;\n            _processPendingEvents(newSessionID);\n        }\n        […]\n    }\n}\n \nVideoPlayer.prototype._processPendingEvents function(sessionID) {\n    _pendingEvents.forEach((event) => {\n        event.events[0].xdm.mediaCollection.sessionID = sessionID;\n        _collectEvent(event);\n    });\n    _pendingEvents = [];\n}\n')),(0,o.mdx)("h2",{id:"custom-metadata-issues"},"Custom metadata issues"),(0,o.mdx)("p",null,"When using the custom metadata feature with Media Edge APIs, note the following: "),(0,o.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"If you do not correctly create a custom field group or add a custom field to that group before creating custom metadata in your API request, you will not receive an error in response. The API service has no way of currently verifying that these customizations have been previously created. Make sure you carefully follow the steps as described in ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/en/docs/platform-learn/tutorials/schemas/create-schema-field-groups"},"Create schema field groups")," or your custom metadata will not work and you will not be notified by an error response."))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-endpoints-media-edge-troubleshooting-md-98a4464842a3bf3c231a.js.map