{"version":3,"sources":["webpack:///./src/pages/filters/index.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"mappings":"4LAUsBA,E,4DAFTC,G,UAAe,IAOtBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,oBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,cAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,mBAAQ,CACN,GAAM,WADR,WAGA,8NAA2M,+BAAGC,WAAW,KAAQ,CAC7N,KAAQ,sHAD+L,oBAA3M,mDAGA,2CAAwB,4BAAYA,WAAW,KAAvB,YAAxB,6CACA,mBAAQ,CACN,GAAM,8BADR,8BAGA,sDAAmC,wBAAQA,WAAW,KAAnB,cAAnC,MAAwF,wBAAQA,WAAW,KAAnB,WAAxF,oIACA,uBAAG,4BAAYA,WAAW,KAAvB,qCACH,8BAAW,+BAAGA,WAAW,KAAQ,CAC7B,KAAQ,MADD,uBAAX,sFAGA,mBAAQ,CACN,GAAM,4BADR,4BAGA,kIACA,uBAAG,4BAAYA,WAAW,KAAvB,0CACH,mBAAQ,CACN,GAAM,mBADR,mBAGA,cAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,gBACjD,wJAwCJF,EAAWM,gBAAiB","file":"component---src-pages-filters-index-md-6ac2504ad191759cd1aa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cja-apis/cja-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"filters\"\n    }}>{`Filters`}</h1>\n    <p>{`The Filters APIs allow you to retrieve, update, or create filters programmatically through Adobe I/O. The APIs use the same data and methods that are used when working with filters in the UI. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/analytics-platform/using/cja-components/cja-filters/filters-overview.html\"\n      }}>{`Filters overview`}</a>{` in the CJA documentation for more information.`}</p>\n    <p>{`You can call the `}<inlineCode parentName=\"p\">{`/filters`}</inlineCode>{` endpoint to add, edit or delete filters.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-a-list-of-filters\"\n    }}>{`Retrieve a list of filters`}</h2>\n    <p>{`In CJA, you can navigate to `}<strong parentName=\"p\">{`Components`}</strong>{` > `}<strong parentName=\"p\">{`Filters`}</strong>{` and see a list of filters that you created or others have shared. This call is helpful to identify the ID's of desired filters.`}</p>\n    <p><inlineCode parentName=\"p\">{`GET https://cja.adobe.io/filters`}</inlineCode></p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#\"\n      }}>{`GET List of filters`}</a>{` in the API reference for supported query string parameters and example responses.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-a-single-filter\"\n    }}>{`Retrieve a single filter`}</h2>\n    <p>{`Once you have the desired ID, you can append the ID to the call to retrieve details on a single filter:`}</p>\n    <p><inlineCode parentName=\"p\">{`GET https://cja.adobe.io/filters/{id}`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"create-a-filter\"\n    }}>{`Create a filter`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Adobe does not yet support the creation of filters through the API. Support for this feature is planned for the near future.`}</p>\n    {\n      /*\n      Create a new filter with the desired definition.\n      `POST https://cja.adobe.io/filters`\n      An example POST body:\n      ```json\n      {\n         \"dataId\": \"{DATAID}\",\n         \"compatibility\": null,\n         \"definition\": {\n             \"container\": {\n                 \"func\": \"container\",\n                 \"pred\": {\n                     \"evt\": {\n                         \"func\": \"event\",\n                         \"name\": \"metrics/visits\"\n                     },\n                     \"func\": \"event-exists\",\n                     \"description\": \"purchase id\"\n                 },\n                 \"context\": \"hits\"\n             },\n             \"func\": \"segment\",\n             \"version\": [\n                 1,\n                 0,\n                 0\n             ]\n         },\n         \"name\": \"Integration Test Seg 1\",\n         \"description\": \"For Integration Test Only\"\n      }\n      ```\n      */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}